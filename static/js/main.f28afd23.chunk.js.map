{"version":3,"sources":["core/user/selectors.js","core/user/actions.js","config/config.js","components/login/LoginDialog.jsx","components/appBar/ProfileButton.js","core/services/config/configService.js","providers/FeatureFlagProvider.js","utils/navigationUtils.js","store/search/actions.js","store/search/selectors.js","components/common/MessageBanner.js","components/appBar/SearchBar.jsx","components/appBar/AppBar.js","core/term/actions.js","components/footer/Footer.js","components/navigation/NavigationBreadcrumb.jsx","components/course/selectors.js","components/course/actions.js","components/spinner/Spinner.js","core/term/selectors.js","components/course/CourseSchedule.js","layouts/CourseSchedulePanel.js","utils/utils.js","layouts/CourseLayout/components/MoreMenu.jsx","store/courses/selectors.js","layouts/CourseLayout/index.jsx","components/common/PaginatedList.js","components/courses/CoursesList.js","store/courses/actions.js","layouts/CoursesListLayout.js","components/subjects/selectors.js","components/subjects/SubjectsList.js","providers/ConfigProvider.js","components/subjects/actions.js","components/courses/CourseShortlist.js","layouts/SubjectsLayout.js","layouts/ResultLayout.js","layouts/ProfileLayout/index.jsx","config/routeConfig.js","layouts/NotFoundPage/index.jsx","providers/AnalyticsProvider.js","App.js","components/subjects/reducers.js","store/courses/reducers.js","components/course/reducers.js","store/search/reducers.js","core/term/reducers.js","core/user/reducers.js","core/error/actions.js","config/notificationConfig.js","store/rootReducer.js","core/notifications/reducers.js","services/subject/subjectService.js","components/subjects/sagas.js","core/services/http/httpService.js","services/course/courseService.js","store/courses/sagas.js","components/course/sagas.js","services/search/searchService.js","store/search/sagas.js","core/services/term/termService.js","core/term/sagas.js","core/services/user/userService.js","core/user/sagas.js","store/rootSaga.js","config/configureStore.js","providers/InitializationProvider.js","core/notifications/selectors.js","providers/NotificationsProvider.js","serviceWorker.js","config/configAxios.js","index.js"],"names":["selectDomain","state","user","userInfoSelector","createSelector","subState","userInfo","userIsLoadingSelector","loading","userIsLoggedInSelector","loggedIn","selectCoursesTakenDomain","coursesTaken","coursesTakenSelector","coursesTakenMapSelector","coursesTakenMap","userActionTypes","getUserInfo","type","getUserInfoSuccess","SERVER_URL","configList","key","url","LoginDialog","open","onClose","oauthSignIn","Dialog","DialogTitle","DialogContent","appId","fields","callback","res","accessToken","DialogActions","defaultProps","useStyles","makeStyles","link","color","textDecoration","mapDispatchToProps","logOut","provider","params","connect","React","useState","anchorEl","setAnchorEl","showLoginDialog","setShowLoginDialog","classNames","Typography","variant","handleClose","Fragment","IconButton","onClick","event","currentTarget","Menu","id","keepMounted","Boolean","className","to","MenuItem","Button","parseResponse","data","FeatureFlagContext","createContext","useFeatureFlags","useContext","children","featureFlags","setFeatureFlags","useEffect","Axios","get","then","flags","catch","console","error","Provider","value","useNavigation","history","useHistory","navigateTo","searchParams","toString","push","getCourseLink","course","subject","catalog_number","getSubjectLink","getResultsPageLink","query","resultActionTypes","getSearchResult","payload","getSearchResultSuccess","getSearchResultFailure","selectSearchResults","search","results","searchResultsSelector","searchResultsIsLoadingSelector","isLoading","theme","root","paddingTop","spacing","paddingBottom","MessageBanner","message","classes","align","searchIcon","palette","common","white","paddingLeft","paddingRight","inputContainer","outline","backgroundColor","inputBase","flex","height","width","container","position","text","primary","resultsSection","zIndex","drawer","marginTop","hidden","overflow","clearSearchResult","props","input","setInput","focused","setFocused","count","handleSelect","onFocus","onBlur","Box","display","alignItems","fontSize","InputBase","onChange","e","target","onKeyDown","keyCode","placeholder","inputProps","Paper","square","length","List","slice","map","result","item","icon","component","title","description","refIndex","ListItem","button","ListItemIcon","ListItemText","titleLink","ButtonAppBar","isSearchEnabled","AppBar","elevation","Toolbar","Grid","md","searchBarWrapper","justify","coreActionTypes","getTermsSuccess","links","githubLnk","heartIcon","main","seconds","minutes","hours","days","age","setAge","birthday","Date","interval","setInterval","diff","Math","floor","clearInterval","SvgIcon","FavoriteIcon","Link","href","rel","GitHubIcon","breadcrumb","textTransform","lastText","disabled","NavigationBreadcrumb","parts","useLocation","pathname","split","filter","Breadcrumbs","aria-label","part","i","join","courseSelector","courseIsLoadingSelector","courseScheduleSelector","schedule","courseSectionsSelector","sections","courseScheduleIsLoadingSelector","courseActionTypes","getCourseSuccess","shortlistCourseSuccess","unshortlistCourseSuccess","markCourseTakenFailure","unMarkCourseTakenFailure","justifyContent","marginLeft","CircularIndeterminate","CircularProgress","term","currentTermSelector","currentTerm","nextTermSelector","nextTerm","termIsLoadingSelector","getCourseSchedule","catalogNumber","page","setPage","rowsPerPage","setRowsPerPage","sectionsList","forEach","section","date","location","instructors","sectionsToRender","start_time","end_time","weekdays","building","room","TableRow","TableCell","TableContainer","Table","TableHead","TableBody","TableFooter","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","termLoading","activeTerm","setActiveTerm","Tabs","indicatorColor","textColor","Tab","label","name","getCourseCode","markCourseTaken","unMarkCourseTaken","markCourseTakenMap","isCourseTaken","courses","selectCoursesDomain","coursesSelector","coursesIsLoadingSelector","shortlistSelector","shortlist","shortlistedCoursesSelector","unlockedCoursesMapSelector","unlockedCoursesMap","processCourseMatch","str","matches","startIndex","index","match","courseLink","displayedFileds","accessor","isCourseMatchEnabled","preReqCourseMatches","antiReqCourseMatches","terms","courseInfoSection","courseDetails","marginBottom","sectionsContainer","schedules","padding","courseTitle","starIcon","warning","getCourseByCatalogNumber","shortlistCourse","unshortlistCourse","useParams","courseMatch","showDetails","setShowDetails","moreMenuAnchor","setMoreMenuAnchor","_","isEmpty","shortlisted","chips","courseCode","isCourseUnlocked","log","content","Function","caption","Container","maxWidth","gutterBottom","size","Chip","Collapse","in","PaginatedList","items","renderItem","pagination","currentPage","onPageChange","maxRowsPerPage","setMaxRowsPerPage","filteredItems","itemsList","navigation","URLSearchParams","Number","set","coursesActionTypes","getCoursesSuccess","getShortlistedCoursesSuccess","getUnlockedCoursesFailure","wrapper","getCourses","subjects","subjectsSelector","subjectsIsLoadingSelector","filterUsed","ConfigContext","config","setConfig","newConfig","Promise","all","getConfig","subjectsActionTypes","getSubjectsSuccess","courseCard","marginRight","WebkitBoxOrient","WebkitLineClamp","textOverflow","CourseShortlist","coursesList","Card","CardActionArea","style","CardContent","GridList","cols","cellHeight","overflowY","paper","popularFilter","isPopular","allFilter","getSubjects","getShortlistedCourses","isLoggedIn","popularSubjects","showPopular","undefined","sub","otherFilter","noPopularFilter","ResultsLayout","queryParams","renderResultItem","Divider","light","avatar","username","routeConfig","path","CourseLayout","CoursesListLayout","SubjectsLayout","Avatar","alt","displayName","src","avatarUrl","exact","redirectTo","ReactGA","initialize","pageview","useStyle","appContainer","flexDirection","background","default","appContent","getTerms","resumeUserSession","basename","AnalyticsProvider","Component","initialState","coursesInitialState","combineReducers","action","Immutable","merge","unlockedCourses","newState","reduce","previousTerm","userInfoInitialState","shortlistedCourses","coursesTakenInitialState","buildCoursesTakenMap","errorActionTypes","notificationConfig","rootReducer","course_id","Object","assign","notifications","now","getCoursesBySubject","call","subjectService","put","takeLatest","httpGet","options","httpAuthGet","withCredentials","httpAuthPost","post","httpPost","httpAuthPut","httpPut","httpAuthDelete","delete","httpDelete","courseId","getUnlockedCourses","handleGetShortlistedCourses","handleGetUnlockCourses","handleUpdateUnlockedCourses","courseService","handleGetCourseByCatalogNumber","handleShortlistCourse","handleUnshortlistCourse","handleMarkTaken","handleUnMarkTaken","querySearch","handleSearch","getAllTerms","termService","previous_term","current_term","next_term","listings","keys","checkLoginStatus","doOAuth","access_token","handleGetUserInfo","handleResumeUserSession","handleUserLogOut","userService","localStorage","setItem","removeItem","fork","configureStore","sagaMiddleware","createSagaMiddleware","middleware","composeEnhancers","compose","store","createStore","applyMiddleware","run","rootSaga","ConfigProvider","FeatureFlagProvider","notificationsSelector","displayed","Map","NotificationsProviderConnected","enqueueSnackbar","useSnackbar","pop","rest","has","autoHideDuration","preventDuplicate","maxSnack","window","hostname","interceptors","response","use","status","dispatch","serviceUnavailableError","networkError","reject","ReactDOM","render","CssBaseline","InitializationProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f28afd23.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectDomain = state => state.user;\n\nexport const userInfoSelector = createSelector(\n  selectDomain,\n  subState => subState.userInfo\n);\n\nexport const userIsLoadingSelector = createSelector(\n  userInfoSelector,\n  subState => subState.loading\n);\n\nexport const userIsLoggedInSelector = createSelector(\n  userInfoSelector,\n  subState => subState.loggedIn\n);\n\nconst selectCoursesTakenDomain = createSelector(\n  selectDomain,\n  subState => subState.coursesTaken\n);\n\nexport const coursesTakenSelector = createSelector(\n  selectCoursesTakenDomain,\n  subState => subState.coursesTaken\n);\n\nexport const coursesTakenMapSelector = createSelector(\n  selectCoursesTakenDomain,\n  subState => subState.coursesTakenMap\n);\n","export const userActionTypes = {\n  GET_USER_INFO: \"user/GET_USER_INFO\",\n  GET_USER_INFO_SUCCESS: \"user/GET_USER_INFO_SUCCESS\",\n  GET_USER_INFO_FAILURE: \"user/GET_USER_INFO_FAILURE\",\n\n  RESUME_USER_SESSION: \"user/RESUME_USER_SESSION\",\n\n  OAUTH_SIGN_IN: \"user/OAUTH_SIGN_IN\",\n  OAUTH_SIGN_IN_SUCCESS: \"user/OAUTH_SIGN_IN_SUCCESS\",\n  OAUTH_SIGN_IN_FAILURE: \"user/OAUTH_SIGN_IN_FAILURE\",\n\n  LOG_OUT: \"user/LOG_OUT\",\n  LOG_OUT_SUCCESS: \"user/LOG_OUT_SUCCESS\",\n  LOG_OUT_FAILURE: \"user/LOG_OUT_FAILURE\"\n};\n\nexport const getUserInfo = () => ({\n  type: userActionTypes.GET_USER_INFO\n});\n\nexport const getUserInfoSuccess = userInfo => ({\n  type: userActionTypes.GET_USER_INFO_SUCCESS,\n  userInfo\n});\n\nexport const getUserInfoFailure = error => ({\n  type: userActionTypes.GET_USER_INFO_FAILURE,\n  error\n});\n\nexport const resumeUserSession = () => ({\n  type: userActionTypes.RESUME_USER_SESSION\n});\n\nexport const oauthSignIn = (provider, params) => ({\n  type: userActionTypes.OAUTH_SIGN_IN,\n  provider,\n  params\n});\n\nexport const oauthSignInSuccess = payload => ({\n  type: userActionTypes.OAUTH_SIGN_IN_SUCCESS,\n  payload\n});\n\nexport const oauthSignInFailure = error => ({\n  type: userActionTypes.OAUTH_SIGN_IN_FAILURE,\n  error\n});\n\nexport const logOut = () => ({\n  type: userActionTypes.LOG_OUT\n});\n\nexport const logOutSuccess = () => ({\n  type: userActionTypes.LOG_OUT_SUCCESS\n});\n\nexport const logOutFailure = () => ({\n  type: userActionTypes.LOG_OUT_FAILURE\n});\n","export const ENV = 'prod';\n\nexport const SERVER_URL = 'https://uw-course-explorer.herokuapp.com';\n\nexport const CONFIG_SERVER_URL =\n  'https://raw.githubusercontent.com/ChrisXJH/config-server/master/uw_course_explorer';\n\nexport const FEATURE_FLAG_SERVER_URL =\n  'https://raw.githubusercontent.com/ChrisXJH/config-server/master/uw_course_explorer/feature_flags/prod.json';\n\nexport const FACEBOOK_APP_ID = 507086496600584;\n\nexport const GA_TRACKING_ID = 'UA-112067320-3';\n\nexport const configList = [\n  {\n    key: 'popularSubjects',\n    url: `${CONFIG_SERVER_URL}/subjects/popular_subjects.json`\n  }\n];\n","import React from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions\n} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport FacebookLogin from \"react-facebook-login\";\nimport { FACEBOOK_APP_ID } from \"../../config/config\";\n\nconst LoginDialog = ({ open, onClose, oauthSignIn }) => {\n  const onFacebookResponse = res => {\n    const { accessToken } = res;\n    oauthSignIn(\"facebook\", { accessToken });\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Log in</DialogTitle>\n      <DialogContent>\n        <FacebookLogin\n          appId={FACEBOOK_APP_ID}\n          fields=\"name,email,picture\"\n          callback={onFacebookResponse}\n        />\n        <DialogActions />\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nLoginDialog.defaultProps = {\n  open: false\n};\n\nLoginDialog.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  oauthSignIn: PropTypes.func.isRequired\n};\n\nexport default LoginDialog;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  userIsLoadingSelector,\n  userIsLoggedInSelector\n} from '../../core/user/selectors';\nimport {\n  Button,\n  Typography,\n  IconButton,\n  Menu,\n  MenuItem,\n  makeStyles\n} from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { logOut, oauthSignIn } from '../../core/user/actions';\nimport PropTypes from 'prop-types';\nimport LoginDialog from '../login/LoginDialog';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  link: {\n    color: 'black',\n    textDecoration: 'none'\n  }\n});\n\nconst ProfileButton = ({ loading, loggedIn, logOut, oauthSignIn }) => {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [showLoginDialog, setShowLoginDialog] = useState(false);\n  const classNames = useStyles();\n\n  if (loading) return <Typography variant=\"body1\">...</Typography>;\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogOut = () => {\n    logOut();\n    handleClose();\n  };\n\n  if (loggedIn) {\n    return (\n      <React.Fragment>\n        <IconButton onClick={handleClick} color=\"inherit\">\n          <AccountCircle />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <Link\n            className={classNames.link}\n            to=\"/profile\"\n            onClick={() => setAnchorEl(null)}\n          >\n            <MenuItem>Profile</MenuItem>\n          </Link>\n          <MenuItem onClick={handleLogOut}>Logout</MenuItem>\n        </Menu>\n      </React.Fragment>\n    );\n  }\n\n  const handleLogin = () => {\n    setShowLoginDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setShowLoginDialog(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Button color=\"inherit\" onClick={handleLogin}>\n        Login\n      </Button>\n      <LoginDialog\n        open={showLoginDialog}\n        onClose={handleCloseDialog}\n        oauthSignIn={oauthSignIn}\n      />\n    </React.Fragment>\n  );\n};\n\nProfileButton.propTypes = {\n  loading: PropTypes.bool,\n  loggedIn: PropTypes.bool,\n  logOut: PropTypes.func.isRequired,\n  oauthSignIn: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  loading: userIsLoadingSelector(state),\n  loggedIn: userIsLoggedInSelector(state)\n});\n\nconst mapDispatchToProps = {\n  logOut,\n  oauthSignIn\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileButton);\n","import Axios from \"axios\";\nimport { FEATURE_FLAG_SERVER_URL } from \"../../../config/config\";\n\nconst parseResponse = res => res.data;\n\nexport const getConfig = url => Axios.get(url).then(parseResponse);\n\nexport const getFeatureFlags = () =>\n  Axios.get(FEATURE_FLAG_SERVER_URL).then(parseResponse);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { getFeatureFlags } from \"../core/services/config/configService\";\n\nconst FeatureFlagContext = React.createContext({});\n\nexport const useFeatureFlags = () => useContext(FeatureFlagContext);\n\nexport default function({ children }) {\n  const [featureFlags, setFeatureFlags] = useState({});\n\n  useEffect(() => {\n    getFeatureFlags()\n      .then(flags => setFeatureFlags(flags))\n      .catch(console.error);\n  }, []);\n\n  return (\n    <FeatureFlagContext.Provider value={featureFlags}>\n      {children}\n    </FeatureFlagContext.Provider>\n  );\n}\n","import { useHistory } from \"react-router-dom\";\n\nexport const useNavigation = () => {\n  const history = useHistory();\n\n  const navigateTo = (link, searchParams) => {\n    let params = \"\";\n\n    if (searchParams) {\n      params = `?${searchParams.toString()}`;\n    }\n\n    history.push(`${link}${params}`);\n  };\n\n  return { navigateTo };\n};\n\nexport const getCourseLink = course =>\n  `/subjects/${course.subject}/${course.catalog_number}`;\n\nexport const getSubjectsPageLink = () => \"/subjects\";\n\nexport const getSubjectLink = subject =>\n  `${getSubjectsPageLink()}/${subject.subject}`;\n\nexport const getResultsPageLink = query => `/results?query=${query}`;\n","export const resultActionTypes = {\n  GET_SEARCH_RESULT: \"search/GET_SEARCH_RESULT\",\n  CLEAR_SEARCH_RESULT: \"search/CLEAR_SEARCH_RESULT\",\n  GET_SEARCH_RESULT_SUCCESS: \"search/GET_SEARCH_RESULT_SUCCESS\",\n  GET_SEARCH_RESULT_FAILURE: \"search/GET_SEARCH_RESULT_FAILURE\"\n};\n\nexport const getSearchResult = payload => ({\n  type: resultActionTypes.GET_SEARCH_RESULT,\n  payload\n});\n\nexport const clearSearchResult = () => ({\n  type: resultActionTypes.CLEAR_SEARCH_RESULT\n});\n\nexport const getSearchResultSuccess = payload => ({\n  type: resultActionTypes.GET_SEARCH_RESULT_SUCCESS,\n  payload\n});\n\nexport const getSearchResultFailure = payload => ({\n  type: resultActionTypes.GET_SEARCH_RESULT_FAILURE,\n  payload\n});\n","import { createSelector } from \"reselect\";\n\nconst selectDomain = state => state.search;\n\nconst selectSearchResults = createSelector(\n  selectDomain,\n  subState => subState.results\n);\n\nexport const searchResultsSelector = createSelector(\n  selectSearchResults,\n  subState => subState.data\n);\n\nexport const searchResultsIsLoadingSelector = createSelector(\n  selectSearchResults,\n  subState => subState.isLoading\n);\n","import React from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  }\n}));\n\nconst MessageBanner = ({ message }) => {\n  const classes = useStyles();\n\n  return (\n    <Typography className={classes.root} variant=\"body2\" align=\"center\">\n      {message}\n    </Typography>\n  );\n};\n\nMessageBanner.propTypes = {\n  message: PropTypes.string.isRequired\n};\n\nexport default MessageBanner;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  InputBase,\n  Paper,\n  makeStyles,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n  Box\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ClassIcon from \"@material-ui/icons/Class\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport SubjectIcon from \"@material-ui/icons/Subject\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  getCourseLink,\n  getSubjectLink,\n  getResultsPageLink,\n  useNavigation\n} from \"../../utils/navigationUtils\";\nimport { Link } from \"react-router-dom\";\nimport { getSearchResult, clearSearchResult } from \"../../store/search/actions\";\nimport { searchResultsSelector } from \"../../store/search/selectors\";\nimport MessageBanner from \"../common/MessageBanner\";\n\nconst MAX_ENTRIES = 6;\n\nconst useStyles = makeStyles(theme => ({\n  searchIcon: {\n    color: theme.palette.common.white,\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  inputContainer: {\n    outline: \"none\",\n    backgroundColor: \"rgba(225,225,225,0.1)\"\n  },\n  inputBase: {\n    flex: 1,\n    height: theme.spacing(5),\n    color: theme.palette.common.white,\n    width: theme.spacing(60)\n  },\n  container: {\n    position: \"relative\",\n    outline: \"none\"\n  },\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary\n  },\n  resultsSection: {\n    position: \"absolute\",\n    zIndex: theme.zIndex.drawer,\n    width: \"100%\",\n    marginTop: theme.spacing(0.5)\n  },\n  hidden: {\n    height: 0,\n    overflow: \"hidden\"\n  }\n}));\n\nconst SearchBar = props => {\n  const classes = useStyles();\n  const [input, setInput] = useState(\"\");\n  const [focused, setFocused] = useState(false);\n  const { navigateTo } = useNavigation();\n\n  const { results, getSearchResult, clearSearchResult } = props;\n\n  useEffect(() => {\n    if (input) {\n      getSearchResult({ query: input, count: MAX_ENTRIES });\n    } else {\n      clearSearchResult();\n    }\n  }, [clearSearchResult, getSearchResult, input]);\n\n  useEffect(() => () => clearSearchResult(), [clearSearchResult]);\n\n  const handleInputChange = e => setInput(e.target.value);\n\n  const handleSelect = () => {\n    setFocused(false);\n  };\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      navigateTo(getResultsPageLink(input));\n      handleSelect();\n    }\n  };\n\n  return (\n    <div\n      className={classes.container}\n      onFocus={() => setFocused(true)}\n      onBlur={() => setFocused(false)}\n    >\n      <div className={classes.inputContainer}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <SearchIcon fontSize=\"large\" className={classes.searchIcon} />\n          <InputBase\n            value={input}\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            className={classes.inputBase}\n            placeholder=\"Search for courses or subjects…\"\n            inputProps={{ \"aria-label\": \"search\" }}\n          />\n        </Box>\n      </div>\n      <div\n        className={focused && input ? classes.resultsSection : classes.hidden}\n      >\n        <Paper square>\n          {results.length === 0 && (\n            <MessageBanner message=\"No results found.\" />\n          )}\n          <List>\n            {results.slice(0, MAX_ENTRIES).map(result => {\n              const { type, item } = result;\n              let icon = null;\n              let text = null;\n              let link = null;\n\n              if (type === \"course\") {\n                link = getCourseLink(item);\n                icon = <ClassIcon />;\n                text = (\n                  <React.Fragment>\n                    <Typography component=\"span\" color=\"textPrimary\">\n                      <b>\n                        {item.subject}&nbsp;{item.catalog_number}\n                      </b>\n                    </Typography>\n                    <Typography component=\"span\" color=\"textSecondary\">\n                      &nbsp;&#124;&nbsp;{item.title}\n                    </Typography>\n                  </React.Fragment>\n                );\n              } else if (type === \"subject\") {\n                link = getSubjectLink(item);\n                icon = <SubjectIcon />;\n                text = (\n                  <React.Fragment>\n                    <Typography component=\"span\" color=\"textPrimary\">\n                      <b>{item.subject}</b>\n                    </Typography>\n                    <Typography component=\"span\" color=\"textSecondary\">\n                      &nbsp;&#124;&nbsp;{item.description}\n                    </Typography>\n                  </React.Fragment>\n                );\n              }\n\n              return (\n                <Link\n                  key={result.refIndex}\n                  to={link}\n                  className={classes.link}\n                  onClick={handleSelect}\n                >\n                  <ListItem button>\n                    <ListItemIcon>{icon}</ListItemIcon>\n                    <ListItemText>{text}</ListItemText>\n                  </ListItem>\n                </Link>\n              );\n            })}\n            {results.length > 0 && (\n              <Link\n                to={getResultsPageLink(input)}\n                className={classes.link}\n                onClick={handleSelect}\n              >\n                <ListItem button>\n                  <ListItemIcon>\n                    <ListIcon />\n                  </ListItemIcon>\n                  <ListItemText>\n                    <Typography color=\"textPrimary\">\n                      {`See all results for \"${input}\"`}\n                    </Typography>\n                  </ListItemText>\n                </ListItem>\n              </Link>\n            )}\n          </List>\n        </Paper>\n      </div>\n    </div>\n  );\n};\n\nSearchBar.propTypes = {\n  results: PropTypes.array,\n  getSearchResult: PropTypes.func.isRequired,\n  clearSearchResult: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  results: searchResultsSelector(state)\n});\n\nconst mapDispatchToProps = {\n  getSearchResult,\n  clearSearchResult\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ProfileButton from \"./ProfileButton\";\nimport { Link } from \"react-router-dom\";\nimport { useFeatureFlags } from \"../../providers/FeatureFlagProvider\";\nimport SearchBar from \"./SearchBar\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  titleLink: {\n    color: theme.palette.common.white,\n    textDecoration: \"none\"\n  }\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const isSearchEnabled = useFeatureFlags().search;\n\n  return (\n    <AppBar elevation={0} square={true} position=\"relative\">\n      <Toolbar>\n        <Grid container>\n          <Grid container item md={2} alignItems=\"center\">\n            <Typography variant=\"h6\">\n              <Link className={classes.titleLink} to=\"/\">\n                UW Course Explorer\n              </Link>\n            </Typography>\n          </Grid>\n          <Grid container item md={6} alignItems=\"center\">\n            {isSearchEnabled && (\n              <div className={classes.searchBarWrapper}>\n                <SearchBar />\n              </div>\n            )}\n          </Grid>\n          <Grid container item md={4} alignItems=\"center\" justify=\"flex-end\">\n            <ProfileButton />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","export const coreActionTypes = {\n  GET_TERMS: \"core/GET_TERMS\",\n  GET_TERMS_SUCCESS: \"core/GET_TERMS_SUCCESS\",\n  GET_TERMS_FAILURE: \"core/GET_TERMS_FAILURE\"\n};\n\nexport const getTerms = () => ({\n  type: coreActionTypes.GET_TERMS\n});\n\nexport const getTermsSuccess = result => ({\n  type: coreActionTypes.GET_TERMS_SUCCESS,\n  result\n});\n\nexport const getTermsFailure = error => ({\n  type: coreActionTypes.GET_TERMS_FAILURE,\n  error\n});\n","import React, { useState, useEffect } from \"react\";\nimport { Typography, SvgIcon, Link, makeStyles } from \"@material-ui/core\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport \"./Footer.css\";\n\nconst SECOND_MILL_SECONDS = 1000;\nconst MINUTE_MILL_SECONDS = 60 * SECOND_MILL_SECONDS;\nconst HOUR_MILL_SECONDS = 60 * MINUTE_MILL_SECONDS;\nconst DAY_MILL_SECONDS = 24 * HOUR_MILL_SECONDS;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingTop: theme.spacing(12),\n    paddingBottom: theme.spacing(4)\n  },\n  links: {\n    marginTop: theme.spacing(1)\n  },\n  githubLnk: {\n    color: theme.palette.text.primary\n  },\n  heartIcon: {\n    color: theme.palette.error.main\n  }\n}));\n\nexport default function() {\n  const classes = useStyles();\n  const [age, setAge] = useState({\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n    days: 0\n  });\n\n  const birthday = new Date(1544164920000);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const diff = new Date() - birthday;\n      const seconds = Math.floor(diff / SECOND_MILL_SECONDS) % 60;\n      const minutes = Math.floor(diff / MINUTE_MILL_SECONDS) % 60;\n      const hours = Math.floor(diff / HOUR_MILL_SECONDS) % 24;\n      const days = Math.floor(diff / DAY_MILL_SECONDS);\n\n      setAge({ seconds, minutes, hours, days });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [birthday]);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"caption\" component=\"p\" align=\"center\">\n        Contains information provided by the University of Waterloo under\n        license on an 'as is' basis\n      </Typography>\n      <div className={classes.links}>\n        <Typography variant=\"caption\" component=\"p\" align=\"center\">\n          {age.days} days {age.hours} hrs {age.minutes} mins {age.seconds} secs\n          &nbsp;\n          <span className={classes.heartIcon}>\n            <SvgIcon\n              component={FavoriteIcon}\n              fontSize=\"small\"\n              className=\"heart-icon icon\"\n            />\n          </span>\n          &nbsp; |&nbsp;\n          <Link\n            className={classes.githubLnk}\n            href=\"https://github.com/ChrisXJH/uw-course-explorer\"\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            GITHUB&nbsp;\n            <SvgIcon className=\"icon\" component={GitHubIcon} fontSize=\"small\" />\n          </Link>\n        </Typography>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Breadcrumbs, Typography, makeStyles } from \"@material-ui/core\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  breadcrumb: {\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  link: {\n    color: theme.palette.text.primary,\n    textTransform: \"capitalize\"\n  },\n  lastText: {\n    color: theme.palette.text.disabled\n  }\n}));\n\nexport default function NavigationBreadcrumb() {\n  const classes = useStyles();\n  const location = useLocation();\n\n  const parts = location.pathname.split(\"/\").filter(Boolean);\n\n  return (\n    <Breadcrumbs className={classes.breadcrumb} aria-label=\"breadcrumb\">\n      {parts.map((part, i) => {\n        if (i === parts.length - 1) {\n          return (\n            <Typography key={part} className={classes.lastText}>\n              {part}\n            </Typography>\n          );\n        }\n\n        return (\n          <Link\n            key={part}\n            className={classes.link}\n            to={`/${parts.slice(0, i + 1).join(\"/\")}`}\n          >\n            {part}\n          </Link>\n        );\n      })}\n    </Breadcrumbs>\n  );\n}\n","import { createSelector } from \"reselect\";\n\nconst selectDomain = state => state.course;\n\nexport const courseSelector = createSelector(\n  selectDomain,\n  subState => subState.course\n);\n\nexport const courseIsLoadingSelector = createSelector(\n  selectDomain,\n  subState => subState.loading\n);\n\nexport const courseScheduleSelector = createSelector(\n  selectDomain,\n  subState => subState.schedule\n);\n\nexport const courseSectionsSelector = createSelector(\n  courseScheduleSelector,\n  subState => subState.sections\n);\n\nexport const courseScheduleIsLoadingSelector = createSelector(\n  courseScheduleSelector,\n  subState => subState.loading\n);\n","export const courseActionTypes = {\n  GET_COURSE_BY_CATALOG_NUMBER: 'course/GET_COURSE_BY_CATALOG_NUMBER',\n  GET_COURSE_SUCCESS: 'course/GET_COURSE_SUCCESS',\n  GET_COURSE_FAILURE: 'course/GET_COURSE_FAILURE',\n\n  GET_COURSE_SCHEDULE: 'course/GET_COURSE_SCHEDULE',\n  GET_COURSE_SCHEDULE_SUCCESS: 'course/GET_COURSE_SCHEDULE_SUCCESS',\n  GET_COURSE_SCHEDULE_FAILURE: 'course/GET_COURSE_SCHEDULE_FAILURE',\n\n  SHORTLIST_COURSE: 'course/SHORTLIST_COURSE',\n  SHORTLIST_COURSE_SUCCESS: 'course/SHORTLIST_COURSE_SUCCESS',\n  SHORTLIST_COURSE_FAILURE: 'course/SHORTLIST_COURSE_FAILURE',\n\n  UNSHORTLIST_COURSE: 'course/UNSHORTLIST_COURSE',\n  UNSHORTLIST_COURSE_SUCCESS: 'course/UNSHORTLIST_COURSE_SUCCESS',\n  UNSHORTLIST_COURSE_FAILURE: 'course/UNSHORTLIST_COURSE_FAILURE',\n\n  MARK_COURSE_TAKEN: 'courses/MARK_COURSE_TAKEN',\n  MARK_COURSE_TAKEN_SUCCESS: 'courses/MARK_COURSE_TAKEN_SUCCESS',\n  MARK_COURSE_TAKEN_FAILURE: 'courses/MARK_COURSE_TAKEN_FAILURE',\n\n  UN_MARK_COURSE_TAKEN: 'courses/UN_MARK_COURSE_TAKEN',\n  UN_MARK_COURSE_TAKEN_SUCCESS: 'courses/UN_MARK_COURSE_TAKEN_SUCCESS',\n  UN_MARK_COURSE_TAKEN_FAILURE: 'courses/UN_MARK_COURSE_TAKEN_FAILURE'\n};\n\nexport const getCourseByCatalogNumber = payload => ({\n  type: courseActionTypes.GET_COURSE_BY_CATALOG_NUMBER,\n  payload\n});\n\nexport const getCourseSuccess = course => ({\n  type: courseActionTypes.GET_COURSE_SUCCESS,\n  course\n});\n\nexport const getCourseFailure = error => ({\n  type: courseActionTypes.GET_COURSE_FAILURE,\n  error\n});\n\nexport const getCourseSchedule = (term, subject, catalogNumber) => ({\n  type: courseActionTypes.GET_COURSE_SCHEDULE,\n  term,\n  subject,\n  catalogNumber\n});\n\nexport const getCourseScheduleSuccess = sections => ({\n  type: courseActionTypes.GET_COURSE_SCHEDULE_SUCCESS,\n  sections\n});\n\nexport const getCourseScheduleFailure = error => ({\n  type: courseActionTypes.GET_COURSE_SCHEDULE_FAILURE,\n  error\n});\n\nexport const shortlistCourse = course => ({\n  type: courseActionTypes.SHORTLIST_COURSE,\n  course\n});\n\nexport const shortlistCourseSuccess = course => ({\n  type: courseActionTypes.SHORTLIST_COURSE_SUCCESS,\n  course\n});\n\nexport const shortlistCourseFailure = error => ({\n  type: courseActionTypes.SHORTLIST_COURSE_FAILURE,\n  error\n});\n\nexport const unshortlistCourse = course => ({\n  type: courseActionTypes.UNSHORTLIST_COURSE,\n  course\n});\n\nexport const unshortlistCourseSuccess = course => ({\n  type: courseActionTypes.UNSHORTLIST_COURSE_SUCCESS,\n  course\n});\n\nexport const unshortlistCourseFailure = error => ({\n  type: courseActionTypes.UNSHORTLIST_COURSE_FAILURE,\n  error\n});\n\nexport const markCourseTaken = payload => ({\n  type: courseActionTypes.MARK_COURSE_TAKEN,\n  payload\n});\n\nexport const markCourseTakenSuccess = payload => ({\n  type: courseActionTypes.MARK_COURSE_TAKEN_SUCCESS,\n  ...payload\n});\n\nexport const markCourseTakenFailure = payload => ({\n  type: courseActionTypes.MARK_COURSE_TAKEN_FAILURE,\n  payload\n});\n\nexport const unMarkCourseTaken = payload => ({\n  type: courseActionTypes.UN_MARK_COURSE_TAKEN,\n  payload\n});\n\nexport const unMarkCourseTakenSuccess = payload => ({\n  type: courseActionTypes.UN_MARK_COURSE_TAKEN_SUCCESS,\n  ...payload\n});\n\nexport const unMarkCourseTakenFailure = payload => ({\n  type: courseActionTypes.UN_MARK_COURSE_TAKEN_FAILURE,\n  payload\n});\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    paddingTop: theme.spacing(4),\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}\n","import { createSelector } from \"reselect\";\n\nconst selectDomain = state => state.term;\n\nexport const currentTermSelector = createSelector(\n  selectDomain,\n  subState => subState.currentTerm\n);\n\nexport const nextTermSelector = createSelector(\n  selectDomain,\n  subState => subState.nextTerm\n);\n\nexport const termIsLoadingSelector = createSelector(\n  selectDomain,\n  subState => subState.loading\n);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  courseScheduleIsLoadingSelector,\n  courseSectionsSelector\n} from \"./selectors\";\nimport PropTypes from \"prop-types\";\nimport { getCourseSchedule } from \"./actions\";\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  TableFooter,\n  TablePagination\n} from \"@material-ui/core\";\nimport Spinner from \"../spinner/Spinner\";\nimport MessageBanner from \"../common/MessageBanner\";\n\nconst CourseSchedule = ({\n  subject,\n  term,\n  catalogNumber,\n  loading,\n  sections,\n  getCourseSchedule\n}) => {\n  useEffect(() => {\n    if (term) getCourseSchedule(term, subject, catalogNumber);\n  }, [catalogNumber, getCourseSchedule, subject, term]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  if (loading) return <Spinner />;\n\n  const handlePageChange = (e, newPage) => setPage(newPage);\n\n  const handleRowsPerPageChange = event => {\n    setRowsPerPage(event.target.value);\n    setPage(0);\n  };\n\n  const sectionsList = [];\n  sections.forEach(({ section, classes }) => {\n    classes.forEach(({ date, location, instructors }) => {\n      sectionsList.push({ section, date, location, instructors });\n    });\n  });\n\n  const sectionsToRender = sectionsList\n    .slice(page * rowsPerPage, (page + 1) * rowsPerPage)\n    .map(\n      (\n        {\n          section,\n          date: { start_time, end_time, weekdays },\n          location: { building, room },\n          instructors\n        },\n        key\n      ) => (\n        <TableRow key={key}>\n          <TableCell>{section}</TableCell>\n          <TableCell>\n            {start_time} - {end_time} ({weekdays})\n          </TableCell>\n          <TableCell>\n            {building} {room}\n          </TableCell>\n          <TableCell>{instructors.join(\", \")}</TableCell>\n        </TableRow>\n      )\n    );\n\n  if (sectionsList.length === 0)\n    return <MessageBanner message=\"No schedule found.\" />;\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <b>Section</b>\n            </TableCell>\n            <TableCell>\n              <b>Time</b>\n            </TableCell>\n            <TableCell>\n              <b>Location</b>\n            </TableCell>\n            <TableCell>\n              <b>Instructors</b>\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>{sectionsToRender}</TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 15]}\n              rowsPerPage={rowsPerPage}\n              count={sectionsList.length}\n              page={page}\n              onChangePage={handlePageChange}\n              onChangeRowsPerPage={handleRowsPerPageChange}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n};\n\nCourseSchedule.propTypes = {\n  subject: PropTypes.string.isRequired,\n  term: PropTypes.number.isRequired,\n  catalogNumber: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n  sections: PropTypes.array,\n\n  getCourseSchedule: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  loading: courseScheduleIsLoadingSelector(state),\n  sections: courseSectionsSelector(state)\n});\n\nconst mapDispatchToProps = {\n  getCourseSchedule\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseSchedule);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Tabs, Tab } from \"@material-ui/core\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport {\n  termIsLoadingSelector,\n  currentTermSelector,\n  nextTermSelector\n} from \"../core/term/selectors\";\nimport PropTypes from \"prop-types\";\nimport CourseSchedule from \"../components/course/CourseSchedule\";\nimport MessageBanner from \"../components/common/MessageBanner\";\n\nconst CourseSchedulePanel = ({\n  course,\n  termLoading,\n  currentTerm,\n  nextTerm\n}) => {\n  const [activeTerm, setActiveTerm] = useState(null);\n  useEffect(() => {\n    if (!termLoading && currentTerm !== null) setActiveTerm(currentTerm.id);\n  }, [termLoading, currentTerm]);\n  const handleSelectTerm = (e, term) => setActiveTerm(term);\n\n  if (termLoading) return <Spinner />;\n  if (activeTerm === null)\n    return <MessageBanner message=\"Course schedule not available.\" />;\n\n  return (\n    <React.Fragment>\n      <Tabs\n        value={activeTerm}\n        onChange={handleSelectTerm}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n      >\n        {currentTerm !== null && (\n          <Tab\n            label={\n              \"Current Term\" +\n              (currentTerm.name ? ` (${currentTerm.name})` : \"\")\n            }\n            value={currentTerm.id}\n          />\n        )}\n        {nextTerm !== null && (\n          <Tab\n            label={\"Next Term\" + (nextTerm.name ? ` (${nextTerm.name})` : \"\")}\n            value={nextTerm.id}\n          />\n        )}\n      </Tabs>\n      {activeTerm !== null && (\n        <CourseSchedule\n          subject={course.subject}\n          catalogNumber={course.catalog_number}\n          term={activeTerm}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nCourseSchedulePanel.propTypes = {\n  course: PropTypes.object.isRequired,\n\n  termLoading: PropTypes.bool,\n  currentTerm: PropTypes.object,\n  nextTerm: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  termLoading: termIsLoadingSelector(state),\n  currentTerm: currentTermSelector(state),\n  nextTerm: nextTermSelector(state)\n});\n\nexport default connect(mapStateToProps)(CourseSchedulePanel);\n","export const getCourseCode = (subject, catalogNumber) =>\n  `${subject}${catalogNumber}`;\n","import React from 'react';\nimport { Menu, MenuItem, ListItemIcon, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { coursesTakenMapSelector } from '../../../core/user/selectors';\nimport {\n  markCourseTaken,\n  unMarkCourseTaken\n} from '../../../components/course/actions';\nimport { connect } from 'react-redux';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { getCourseCode } from '../../../utils/utils';\n\nconst MoreMenu = ({\n  anchorEl,\n  course,\n  markCourseTakenMap,\n  onClose,\n  markCourseTaken,\n  unMarkCourseTaken\n}) => {\n  const isCourseTaken =\n    markCourseTakenMap[getCourseCode(course.subject, course.catalog_number)];\n\n  const handleCourseTaken = () => {\n    const payload = {\n      subject: course.subject,\n      catalogNumber: course.catalog_number\n    };\n\n    isCourseTaken ? unMarkCourseTaken(payload) : markCourseTaken(payload);\n    onClose();\n  };\n\n  return (\n    <Menu\n      id=\"simple-menu\"\n      anchorEl={anchorEl}\n      keepMounted\n      open={Boolean(anchorEl)}\n      onClose={onClose}\n    >\n      <MenuItem onClick={handleCourseTaken}>\n        <ListItemIcon>\n          {isCourseTaken ? <ClearIcon /> : <CheckIcon />}\n        </ListItemIcon>\n        <Typography>\n          {isCourseTaken\n            ? \"I didn't take this course\"\n            : 'I have taken this course'}\n        </Typography>\n      </MenuItem>\n    </Menu>\n  );\n};\n\nMoreMenu.propTypes = {\n  anchorEl: PropTypes.object,\n  course: PropTypes.object.isRequired,\n  markCourseTakenMap: PropTypes.object,\n\n  onClose: PropTypes.func.isRequired,\n  markCourseTaken: PropTypes.func.isRequired,\n  unMarkCourseTaken: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  markCourseTakenMap: coursesTakenMapSelector(state)\n});\n\nconst mapDispatchToProps = {\n  markCourseTaken,\n  unMarkCourseTaken\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MoreMenu);\n","import { createSelector } from 'reselect';\n\nconst selectDomain = state => state.courses;\n\nconst selectCoursesDomain = createSelector(\n  selectDomain,\n  subState => subState.courses\n);\n\nexport const coursesSelector = createSelector(\n  selectCoursesDomain,\n  subState => subState.courses\n);\n\nexport const coursesIsLoadingSelector = createSelector(\n  selectCoursesDomain,\n  subState => subState.loading\n);\n\nconst shortlistSelector = createSelector(\n  selectCoursesDomain,\n  subState => subState.shortlist\n);\n\nexport const shortlistIsLoadingSelector = createSelector(\n  shortlistSelector,\n  subState => subState.loading\n);\n\nexport const shortlistedCoursesSelector = createSelector(\n  shortlistSelector,\n  subState => subState.courses\n);\n\nexport const unlockedCoursesMapSelector = createSelector(\n  selectDomain,\n  subState => subState.unlockedCoursesMap\n);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  courseIsLoadingSelector,\n  courseSelector\n} from '../../components/course/selectors';\nimport {\n  shortlistCourse,\n  unshortlistCourse,\n  getCourseByCatalogNumber\n} from '../../components/course/actions';\nimport Spinner from '../../components/spinner/Spinner';\nimport { useParams, Link as RouterLink } from 'react-router-dom';\nimport {\n  Typography,\n  TableContainer,\n  TableBody,\n  TableRow,\n  TableCell,\n  Table,\n  Button,\n  Paper,\n  Container,\n  makeStyles,\n  Collapse,\n  IconButton,\n  Box,\n  Chip\n} from '@material-ui/core';\nimport CourseSchedulePanel from '../CourseSchedulePanel';\nimport MessageBanner from '../../components/common/MessageBanner';\nimport {\n  userIsLoggedInSelector,\n  coursesTakenMapSelector\n} from '../../core/user/selectors';\nimport _ from 'lodash';\nimport NavigationBreadcrumb from '../../components/navigation/NavigationBreadcrumb';\nimport { useFeatureFlags } from '../../providers/FeatureFlagProvider';\nimport { getCourseLink } from '../../utils/navigationUtils';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport MoreMenu from './components/MoreMenu';\nimport DoneIcon from '@material-ui/icons/Done';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport { getCourseCode } from '../../utils/utils';\nimport { unlockedCoursesMapSelector } from '../../store/courses/selectors';\n\nconst processCourseMatch = (str, matches, { classes }) => {\n  if (!str) return str;\n\n  const result = [];\n  let startIndex = 0;\n\n  matches.forEach(({ index, match, subject, catalog_number }) => {\n    result.push(str.slice(startIndex, index));\n    result.push(\n      <RouterLink\n        key={index}\n        className={classes.courseLink}\n        to={getCourseLink({ subject, catalog_number })}\n      >\n        {match}\n      </RouterLink>\n    );\n    startIndex = index + match.length;\n  });\n\n  result.push(str.slice(startIndex));\n\n  return result;\n};\n\nconst displayedFileds = [\n  {\n    key: 'prerequisites',\n    display: 'Prerequisites',\n    accessor: (str, course, { isCourseMatchEnabled, classes }) => {\n      if (!isCourseMatchEnabled) return str;\n\n      const { preReqCourseMatches = [] } = course;\n      return processCourseMatch(str, preReqCourseMatches, { classes });\n    }\n  },\n  {\n    key: 'antirequisites',\n    display: 'Antirequisites',\n    accessor: (str, course, { isCourseMatchEnabled, classes }) => {\n      if (!isCourseMatchEnabled) return str;\n\n      const { antiReqCourseMatches = [] } = course;\n      return processCourseMatch(str, antiReqCourseMatches, { classes });\n    }\n  },\n  {\n    key: 'terms_offered',\n    display: 'Terms offered',\n    accessor: terms => terms.join(', ')\n  },\n  {\n    key: 'notes',\n    display: 'Notes'\n  }\n];\n\nconst useStyles = makeStyles(theme => ({\n  courseInfoSection: {\n    paddingBottom: theme.spacing(2)\n  },\n  courseDetails: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(4)\n  },\n  sectionsContainer: {\n    marginTop: theme.spacing(4)\n  },\n  schedules: {\n    padding: theme.spacing(2),\n    paddingBottom: theme.spacing(6)\n  },\n  courseTitle: {\n    marginBottom: 0\n  },\n  starIcon: {\n    color: theme.palette.warning.main\n  },\n  courseLink: {\n    color: theme.palette.text.primary\n  }\n}));\n\nconst CourseLayout = ({\n  loading,\n  course,\n  loggedIn,\n  coursesTakenMap,\n  unlockedCoursesMap,\n  getCourseByCatalogNumber,\n  shortlistCourse,\n  unshortlistCourse\n}) => {\n  const { subject, catalogNumber } = useParams();\n  const isCourseMatchEnabled = useFeatureFlags().courseMatch;\n  const classes = useStyles();\n\n  const [showDetails, setShowDetails] = useState(false);\n  const [moreMenuAnchor, setMoreMenuAnchor] = useState(null);\n\n  useEffect(() => {\n    getCourseByCatalogNumber({ subject, catalogNumber });\n  }, [catalogNumber, getCourseByCatalogNumber, subject]);\n\n  if (loading) return <Spinner />;\n  if (course === null || _.isEmpty(course))\n    return <MessageBanner message=\"Course not available.\" />;\n\n  const { shortlisted } = course;\n  const handleShortlist = () => {\n    shortlistCourse(course);\n  };\n\n  const handleUnshortlist = () => {\n    unshortlistCourse(course);\n  };\n\n  const handleShowDetails = () => {\n    setShowDetails(!showDetails);\n  };\n\n  const handleOpenMoreMenu = event => setMoreMenuAnchor(event.currentTarget);\n\n  const handleCloseMoreMenu = () => setMoreMenuAnchor(null);\n\n  const chips = [];\n  const courseCode = getCourseCode(course.subject, course.catalog_number);\n  const isCourseTaken = Boolean(coursesTakenMap[courseCode]);\n  const isCourseUnlocked = Boolean(unlockedCoursesMap[courseCode]);\n  console.log(unlockedCoursesMap[courseCode]);\n\n  if (isCourseTaken) chips.push({ label: 'Taken', icon: <DoneIcon /> });\n  if (!isCourseTaken && isCourseUnlocked)\n    chips.push({\n      label: 'Prereq Met',\n      icon: <LockOpenIcon />,\n      color: 'primary'\n    });\n\n  const fields = displayedFileds\n    .map(({ key, display, accessor }) => {\n      const content =\n        accessor instanceof Function\n          ? accessor(course[key], course, { isCourseMatchEnabled, classes })\n          : course[key];\n\n      if (content) {\n        return {\n          caption: display,\n          content\n        };\n      }\n\n      return content;\n    })\n    .filter(Boolean)\n    .map(({ caption, content }, index) => (\n      <TableRow key={index}>\n        <TableCell>\n          <Typography variant=\"body2\">{caption}</Typography>\n        </TableCell>\n        <TableCell>\n          <Typography variant=\"body2\">{content}</Typography>\n        </TableCell>\n      </TableRow>\n    ));\n\n  return (\n    <React.Fragment>\n      <Paper variant=\"outlined\" square className={classes.courseInfoSection}>\n        <Container maxWidth=\"lg\">\n          <NavigationBreadcrumb />\n          <Box marginBottom={2}>\n            <Box marginBottom={3}>\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                justifyContent=\"space-between\"\n                marginBottom={1}\n              >\n                <Box display=\"flex\">\n                  <Typography\n                    variant=\"h4\"\n                    gutterBottom\n                    className={classes.courseTitle}\n                  >\n                    {course.subject} {course.catalog_number} {course.title}\n                  </Typography>\n                  <Box marginLeft={1}>\n                    {loggedIn && (\n                      <IconButton\n                        size=\"small\"\n                        onClick={\n                          shortlisted ? handleUnshortlist : handleShortlist\n                        }\n                      >\n                        {shortlisted ? (\n                          <StarIcon\n                            className={classes.starIcon}\n                            fontSize=\"large\"\n                          />\n                        ) : (\n                          <StarBorderIcon fontSize=\"large\" />\n                        )}\n                      </IconButton>\n                    )}\n                  </Box>\n                </Box>\n                <Box>\n                  <IconButton\n                    aria-label=\"more\"\n                    size=\"small\"\n                    onClick={handleOpenMoreMenu}\n                  >\n                    <MoreHorizIcon fontSize=\"large\" />\n                  </IconButton>\n                  <MoreMenu\n                    course={course}\n                    anchorEl={moreMenuAnchor}\n                    onClose={handleCloseMoreMenu}\n                  />\n                </Box>\n              </Box>\n              <div>\n                {chips.map(({ icon, label, color = 'default', className }) => (\n                  <Chip\n                    key={label}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    icon={icon}\n                    label={label}\n                    color={color}\n                    className={className}\n                  />\n                ))}\n              </div>\n            </Box>\n            <Typography variant=\"subtitle1\">{course.description}</Typography>\n          </Box>\n          <Collapse in={showDetails}>\n            <TableContainer className={classes.courseDetails}>\n              <Table>\n                <TableBody>{fields}</TableBody>\n              </Table>\n            </TableContainer>\n          </Collapse>\n        </Container>\n        <Container>\n          <Button color=\"primary\" onClick={handleShowDetails}>\n            Show {showDetails ? 'less' : 'more'}\n          </Button>\n        </Container>\n      </Paper>\n      <Container className={classes.sectionsContainer}>\n        <Paper variant=\"outlined\" square className={classes.schedules}>\n          <Typography variant=\"h6\">Sections</Typography>\n          {course !== null && <CourseSchedulePanel course={course} />}\n        </Paper>\n      </Container>\n    </React.Fragment>\n  );\n};\n\nCourseLayout.propTypes = {\n  loading: PropTypes.bool,\n  course: PropTypes.object,\n  loggedIn: PropTypes.bool,\n  coursesTakenMap: PropTypes.object.isRequired,\n  unlockedCoursesMap: PropTypes.object.isRequired,\n\n  getCourseByCatalogNumber: PropTypes.func.isRequired,\n  shortlistCourse: PropTypes.func.isRequired,\n  unshortlistCourse: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  loading: courseIsLoadingSelector(state),\n  course: courseSelector(state),\n  loggedIn: userIsLoggedInSelector(state),\n  coursesTakenMap: coursesTakenMapSelector(state),\n  unlockedCoursesMap: unlockedCoursesMapSelector(state)\n});\n\nconst mapDispatchToProps = {\n  getCourseByCatalogNumber,\n  shortlistCourse,\n  unshortlistCourse\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseLayout);\n","import React, { useState } from \"react\";\nimport { List, TablePagination } from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\n\nconst PaginatedList = ({\n  items,\n  renderItem,\n  filter,\n  pagination,\n  currentPage,\n  rowsPerPage,\n  rowsPerPageOptions,\n  onPageChange,\n  onChangeRowsPerPage\n}) => {\n  rowsPerPage = rowsPerPage || rowsPerPageOptions[0];\n\n  const [page, setPage] = useState(currentPage);\n  const [maxRowsPerPage, setMaxRowsPerPage] = useState(rowsPerPage);\n\n  const handlePageChange = (e, newPage) => {\n    onPageChange && onPageChange(newPage);\n    setPage(newPage);\n  };\n\n  const onMaxRowsPerPageChange = event => {\n    onChangeRowsPerPage && onChangeRowsPerPage(event.target.value);\n    onPageChange && onPageChange(0);\n    setMaxRowsPerPage(event.target.value);\n    setPage(0);\n  };\n\n  const filteredItems = items.filter(filter);\n  const itemsToRender = pagination\n    ? filteredItems.slice(page * maxRowsPerPage, (page + 1) * maxRowsPerPage)\n    : filteredItems;\n  const itemsList = itemsToRender.map(renderItem);\n\n  return (\n    <React.Fragment>\n      <List>{itemsList}</List>\n      {pagination && (\n        <TablePagination\n          component=\"div\"\n          count={filteredItems.length}\n          rowsPerPage={maxRowsPerPage}\n          rowsPerPageOptions={rowsPerPageOptions}\n          onChangeRowsPerPage={onMaxRowsPerPageChange}\n          page={page}\n          onChangePage={handlePageChange}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nPaginatedList.defaultProps = {\n  filter: () => true,\n  pagination: true,\n  currentPage: 0,\n  rowsPerPageOptions: [10, 25, 50, 100]\n};\n\nPaginatedList.propTypes = {\n  items: PropTypes.array.isRequired,\n  renderItem: PropTypes.func.isRequired,\n  filter: PropTypes.func,\n  pagination: PropTypes.bool,\n  currentPage: PropTypes.number,\n  rowsPerPage: PropTypes.number,\n  rowsPerPageOptions: PropTypes.array,\n  onPageChange: PropTypes.func,\n  onChangeRowsPerPage: PropTypes.func\n};\n\nexport default PaginatedList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  coursesSelector,\n  coursesIsLoadingSelector,\n  unlockedCoursesMapSelector\n} from '../../store/courses/selectors';\nimport Spinner from '../spinner/Spinner';\nimport { ListItem, ListItemText, makeStyles, Chip } from '@material-ui/core';\nimport { Link, useLocation } from 'react-router-dom';\nimport MessageBanner from '../common/MessageBanner';\nimport PaginatedList from '../common/PaginatedList';\nimport { getCourseLink, useNavigation } from '../../utils/navigationUtils';\nimport DoneIcon from '@material-ui/icons/Done';\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\nimport PropTypes from 'prop-types';\nimport { coursesTakenMapSelector } from '../../core/user/selectors';\nimport { getCourseCode } from '../../utils/utils';\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    color: theme.palette.text.primary,\n    textDecoration: 'none'\n  }\n}));\n\nconst CoursesList = ({\n  courses,\n  loading,\n  coursesTakenMap,\n  unlockedCoursesMap\n}) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const navigation = useNavigation();\n\n  if (loading) return <Spinner />;\n\n  if (courses.length === 0)\n    return <MessageBanner message=\"No courses found.\" />;\n\n  const params = new URLSearchParams(location.search);\n\n  const onChangeRowsPerPage = rowsPerPage => {\n    params.set('rowsPerPage', rowsPerPage);\n    navigation.navigateTo(location.pathname, params);\n  };\n\n  const onPageChange = page => {\n    params.set('page', page);\n    navigation.navigateTo(location.pathname, params);\n  };\n\n  const renderCourse = (course, key) => {\n    const chips = [];\n    const courseCode = getCourseCode(course.subject, course.catalog_number);\n    const isCourseTaken = Boolean(coursesTakenMap[courseCode]);\n    const isCourseUnlocked = Boolean(unlockedCoursesMap[courseCode]);\n\n    if (isCourseTaken) chips.push({ label: 'Taken', icon: <DoneIcon /> });\n    if (!isCourseTaken && isCourseUnlocked)\n      chips.push({\n        label: 'Prereq Met',\n        icon: <LockOpenIcon />,\n        color: 'primary'\n      });\n\n    return (\n      <Link key={key} className={classes.link} to={getCourseLink(course)}>\n        <ListItem button>\n          <ListItemText>\n            {course.subject} {course.catalog_number} {course.title}\n          </ListItemText>\n          {chips.map(({ icon, label, color = 'default', className }) => (\n            <Chip\n              key={label}\n              variant=\"outlined\"\n              size=\"small\"\n              icon={icon}\n              label={label}\n              color={color}\n              className={className}\n            />\n          ))}\n        </ListItem>\n      </Link>\n    );\n  };\n\n  return (\n    <PaginatedList\n      items={courses}\n      currentPage={Number(params.get('page'))}\n      rowsPerPage={Number(params.get('rowsPerPage'))}\n      renderItem={renderCourse}\n      onChangeRowsPerPage={onChangeRowsPerPage}\n      onPageChange={onPageChange}\n    />\n  );\n};\n\nCoursesList.propTypes = {\n  courses: PropTypes.array,\n  loading: PropTypes.bool,\n  coursesTakenMap: PropTypes.object.isRequired,\n  unlockedCoursesMap: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  courses: coursesSelector(state),\n  loading: coursesIsLoadingSelector(state),\n  coursesTakenMap: coursesTakenMapSelector(state),\n  unlockedCoursesMap: unlockedCoursesMapSelector(state)\n});\n\nexport default connect(mapStateToProps)(CoursesList);\n","export const coursesActionTypes = {\n  GET_COURSES: 'courses/GET_COURSES',\n  GET_COURSES_SUCCESS: 'courses/GET_COURSES_SUCCESS',\n  GET_COURSES_FAILURE: 'courses/GET_COURSES_FAILURE',\n\n  GET_SHORTLISTED_COURSES: 'courses/GET_SHORTLISTED_COURSES',\n  GET_SHORTLISTED_COURSES_SUCCESS: 'courses/GET_SHORTLISTED_COURSES_SUCCESS',\n  GET_SHORTLISTED_COURSES_FAILURE: 'courses/GET_SHORTLISTED_COURSES_FAILURE',\n\n  GET_UNLOCKED_COURSES: 'courses/GET_UNLOCKED_COURSES',\n  GET_UNLOCKED_COURSES_SUCCESS: 'courses/GET_UNLOCKED_COURSES_SUCCESS',\n  GET_UNLOCKED_COURSES_FAILURE: 'courses/GET_UNLOCKED_COURSES_FAILURE'\n};\n\nexport const getCourses = (subject = null) => ({\n  type: coursesActionTypes.GET_COURSES,\n  subject\n});\n\nexport const getCoursesSuccess = courses => ({\n  type: coursesActionTypes.GET_COURSES_SUCCESS,\n  courses\n});\n\nexport const getCoursesFailure = error => ({\n  type: coursesActionTypes.GET_COURSES_FAILURE,\n  error\n});\n\nexport const getShortlistedCourses = () => ({\n  type: coursesActionTypes.GET_SHORTLISTED_COURSES\n});\n\nexport const getShortlistedCoursesSuccess = courses => ({\n  type: coursesActionTypes.GET_SHORTLISTED_COURSES_SUCCESS,\n  courses\n});\n\nexport const getShortlistedCoursesFailure = error => ({\n  type: coursesActionTypes.GET_SHORTLISTED_COURSES_FAILURE,\n  error\n});\n\nexport const getUnlockedCourses = payload => ({\n  type: coursesActionTypes.GET_UNLOCKED_COURSES,\n  ...payload\n});\n\nexport const getUnlockedCoursesSuccess = payload => ({\n  type: coursesActionTypes.GET_UNLOCKED_COURSES_SUCCESS,\n  ...payload\n});\n\nexport const getUnlockedCoursesFailure = payload => ({\n  type: coursesActionTypes.GET_UNLOCKED_COURSES_FAILURE,\n  ...payload\n});\n","import React, { useEffect } from \"react\";\nimport CoursesList from \"../components/courses/CoursesList\";\nimport { Typography, Container, Paper, makeStyles } from \"@material-ui/core\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport NavigationBreadcrumb from \"../components/navigation/NavigationBreadcrumb\";\nimport { useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { coursesIsLoadingSelector } from \"../store/courses/selectors\";\nimport { getCourses } from \"../store/courses/actions\";\nimport PropTypes from \"prop-types\";\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    marginTop: theme.spacing(4),\n    padding: theme.spacing(2),\n    paddingTop: 0\n  }\n}));\n\nconst CoursesListLayout = ({ loading, getCourses }) => {\n  const { subject } = useParams();\n  const classes = useStyles();\n\n  useEffect(() => {\n    getCourses(subject);\n  }, [getCourses, subject]);\n\n  if (loading) return <Spinner />;\n\n  return (\n    <Container>\n      <Paper variant=\"outlined\" square className={classes.wrapper}>\n        <NavigationBreadcrumb />\n        <Typography variant=\"h5\">Courses of {subject}:</Typography>\n        <CoursesList />\n      </Paper>\n    </Container>\n  );\n};\n\nCoursesListLayout.propTypes = {\n  loading: PropTypes.bool,\n  getCourses: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  loading: coursesIsLoadingSelector(state)\n});\n\nconst mapDispatchToProps = {\n  getCourses\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CoursesListLayout);\n","import { createSelector } from \"reselect\";\n\nconst selectDomain = state => state.subjects;\n\nexport const subjectsSelector = createSelector(\n  selectDomain,\n  subState => subState.subjects\n);\n\nexport const subjectsIsLoadingSelector = createSelector(\n  selectDomain,\n  subState => subState.loading\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { subjectsSelector, subjectsIsLoadingSelector } from \"./selectors\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Spinner from \"../spinner/Spinner\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, ListItem } from \"@material-ui/core\";\nimport PaginatedList from \"../common/PaginatedList\";\nimport PropTypes from \"prop-types\";\nimport { getSubjectLink } from \"../../utils/navigationUtils\";\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: \"none\",\n    color: theme.palette.text.primary\n  }\n}));\n\nconst SubjectsList = ({ subjects, loading, filter, pagination = false }) => {\n  const classes = useStyles();\n\n  if (loading) return <Spinner />;\n\n  const filterUsed = filter instanceof Function ? filter : () => true;\n\n  const renderSubject = (subject, key) => (\n    <Link key={key} className={classes.link} to={getSubjectLink(subject)}>\n      <ListItem button>\n        <ListItemText>\n          <h4>{subject.subject}</h4>\n          <small>{subject.description}</small>\n        </ListItemText>\n      </ListItem>\n    </Link>\n  );\n\n  return (\n    <PaginatedList\n      items={subjects}\n      renderItem={renderSubject}\n      filter={filterUsed}\n      pagination={pagination}\n      rowsPerPageOptions={[20, 30, 50, 100]}\n    />\n  );\n};\n\nSubjectsList.propTypes = {\n  subjects: PropTypes.array,\n  loading: PropTypes.bool,\n  filter: PropTypes.func,\n  pagination: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  subjects: subjectsSelector(state),\n  loading: subjectsIsLoadingSelector(state)\n});\n\nexport default connect(mapStateToProps)(SubjectsList);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { getConfig } from \"../core/services/config/configService\";\nimport { configList } from \"../config/config\";\n\nconst ConfigContext = React.createContext({});\n\nexport const useConfig = () => useContext(ConfigContext);\n\nexport default function({ children }) {\n  const [config, setConfig] = useState({});\n\n  useEffect(() => {\n    const newConfig = {};\n\n    Promise.all(\n      configList.map(({ key, url }) =>\n        getConfig(url).then(result => (newConfig[key] = result))\n      )\n    )\n      .then(() => setConfig(newConfig))\n      .catch(console.error);\n  }, []);\n\n  return (\n    <ConfigContext.Provider value={config}>{children}</ConfigContext.Provider>\n  );\n}\n","export const subjectsActionTypes = {\n  GET_SUBJECTS: \"subjects/GET_SUBJECTS\",\n  GET_SUBJECTS_SUCCESS: \"subjects/GET_SUBJECTS_SUCCESS\",\n  GET_SUBJECTS_FAILURE: \"subjects/GET_SUBJECTS_FAILURE\"\n};\n\nexport const getSubjects = () => ({\n  type: subjectsActionTypes.GET_SUBJECTS\n});\n\nexport const getSubjectsSuccess = subjects => ({\n  type: subjectsActionTypes.GET_SUBJECTS_SUCCESS,\n  subjects\n});\n\nexport const getSubjectsFailure = error => ({\n  type: subjectsActionTypes.GET_SUBJECTS_FAILURE,\n  error\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  GridList,\n  makeStyles,\n  CardActionArea\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { getCourseLink } from \"../../utils/navigationUtils\";\n\nconst useStyles = makeStyles(theme => ({\n  courseCard: {\n    height: \"100%\"\n  },\n  courseLink: {\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    textDecoration: \"none\",\n    color: \"inherit\",\n    height: \"100%\"\n  },\n  courseTitle: {\n    display: \"-webkit-box\",\n    WebkitBoxOrient: \"vertical\",\n    WebkitLineClamp: 2,\n    textOverflow: \"ellipsis\",\n    overflow: \"hidden\"\n  }\n}));\n\nconst CourseShortlist = ({ courses }) => {\n  const classes = useStyles();\n  const coursesList = courses.map((course, key) => (\n    <Link className={classes.courseLink} key={key} to={getCourseLink(course)}>\n      <Card variant=\"outlined\" square className={classes.courseCard}>\n        <CardActionArea style={{ height: \"100%\" }}>\n          <CardContent style={{ height: \"100%\" }}>\n            <Typography variant=\"body1\">\n              <b>\n                {course.subject} {course.catalog_number}\n              </b>\n            </Typography>\n            <Typography className={classes.courseTitle} variant=\"body2\">\n              {course.title}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n      </Card>\n    </Link>\n  ));\n  return (\n    <GridList cols={5} cellHeight={100} style={{ overflowY: \"unset\" }}>\n      {coursesList}\n    </GridList>\n  );\n};\n\nCourseShortlist.propTypes = {\n  courses: PropTypes.array.isRequired\n};\n\nexport default CourseShortlist;\n","import React, { useEffect } from \"react\";\nimport SubjectsList from \"../components/subjects/SubjectsList\";\nimport { Typography, Container, Paper, makeStyles } from \"@material-ui/core\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport { useConfig } from \"../providers/ConfigProvider\";\nimport { connect } from \"react-redux\";\nimport { subjectsIsLoadingSelector } from \"../components/subjects/selectors\";\nimport PropTypes from \"prop-types\";\nimport { getSubjects } from \"../components/subjects/actions\";\nimport CourseShortlist from \"../components/courses/CourseShortlist\";\nimport { getShortlistedCourses } from \"../store/courses/actions\";\nimport { shortlistedCoursesSelector } from \"../store/courses/selectors\";\nimport { userIsLoggedInSelector } from \"../core/user/selectors\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    padding: theme.spacing(2)\n  },\n  shortlist: {\n    marginTop: theme.spacing(4)\n  }\n}));\n\nconst popularFilter = isPopular => ({ subject }) => isPopular[subject] === true;\n\nconst noPopularFilter = isPopular => ({ subject }) =>\n  isPopular[subject] !== true;\n\nconst allFilter = () => true;\n\nconst SubjectsLayout = ({\n  loading,\n  getSubjects,\n  shortlist,\n  isLoggedIn,\n  getShortlistedCourses\n}) => {\n  const { popularSubjects } = useConfig();\n  const classes = useStyles();\n  useEffect(() => {\n    getSubjects();\n  }, [getSubjects]);\n\n  useEffect(() => {\n    if (isLoggedIn) getShortlistedCourses();\n  }, [getShortlistedCourses, isLoggedIn]);\n\n  if (loading) return <Spinner />;\n\n  const showPopular = popularSubjects !== undefined;\n  const isPopular = {};\n  if (showPopular) {\n    popularSubjects.forEach(sub => (isPopular[sub] = true));\n  }\n\n  const otherFilter = showPopular ? noPopularFilter(isPopular) : allFilter;\n\n  return (\n    <Container>\n      {shortlist && shortlist.length > 0 && (\n        <div className={classes.shortlist}>\n          <Typography variant=\"h5\">Pinned courses:</Typography>\n          <br />\n          <CourseShortlist courses={shortlist} />\n        </div>\n      )}\n      {showPopular && (\n        <Paper variant=\"outlined\" square className={classes.paper}>\n          <Typography variant=\"h5\">Popular subjects:</Typography>\n          <SubjectsList filter={popularFilter(isPopular)} />\n        </Paper>\n      )}\n      <Paper variant=\"outlined\" square className={classes.paper}>\n        <Typography variant=\"h5\">Other subjects:</Typography>\n        <SubjectsList filter={otherFilter} pagination={true} />\n      </Paper>\n    </Container>\n  );\n};\n\nSubjectsLayout.propTypes = {\n  loading: PropTypes.bool,\n  shortlist: PropTypes.array,\n  isLoggedIn: PropTypes.bool,\n\n  getSubjects: PropTypes.func.isRequired,\n  getShortlistedCourses: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  loading: subjectsIsLoadingSelector(state),\n  shortlist: shortlistedCoursesSelector(state),\n  isLoggedIn: userIsLoggedInSelector(state)\n});\n\nconst mapDispatchToProps = {\n  getSubjects,\n  getShortlistedCourses\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SubjectsLayout);\n","import React, { useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getSearchResult } from \"../store/search/actions\";\nimport Spinner from \"../components/spinner/Spinner\";\nimport PropTypes from \"prop-types\";\nimport {\n  searchResultsIsLoadingSelector,\n  searchResultsSelector\n} from \"../store/search/selectors\";\nimport PaginatedList from \"../components/common/PaginatedList\";\nimport {\n  makeStyles,\n  Divider,\n  ListItem,\n  ListItemText,\n  Typography,\n  Container,\n  Paper\n} from \"@material-ui/core\";\nimport MessageBanner from \"../components/common/MessageBanner\";\nimport { getCourseLink, useNavigation } from \"../utils/navigationUtils\";\n\nconst useStyles = makeStyles(theme => ({\n  result: {\n    color: theme.palette.text.primary,\n    textDecoration: \"none\"\n  },\n  wrapper: {\n    marginTop: theme.spacing(4),\n    padding: theme.spacing(2)\n  }\n}));\n\nconst ResultsLayout = props => {\n  const classes = useStyles();\n  const location = useLocation();\n  const navigation = useNavigation();\n  const queryParams = new URLSearchParams(location.search);\n  const query = queryParams.get(\"query\");\n\n  const { isLoading, getSearchResult, results } = props;\n\n  useEffect(() => {\n    getSearchResult({ query });\n  }, [getSearchResult, query]);\n\n  const onPageChange = page => {\n    queryParams.set(\"page\", page);\n    navigation.navigateTo(location.pathname, queryParams);\n  };\n\n  const onChangeRowsPerPage = rowsPerPage => {\n    queryParams.set(\"rowsPerPage\", rowsPerPage);\n    navigation.navigateTo(location.pathname, queryParams);\n  };\n\n  const renderResultItem = (result, i) => {\n    const { type, item } = result;\n    let url;\n    let content = null;\n\n    if (type === \"subject\") {\n      url = `/subjects/${item.subject}`;\n      content = (\n        <ListItemText>\n          <p>{item.subject}</p>\n          <small>{item.description}</small>\n        </ListItemText>\n      );\n    } else if (type === \"course\") {\n      url = getCourseLink(item);\n      content = (\n        <ListItemText>\n          <p>{`${item.subject} ${item.catalog_number}`}</p>\n          <small>{item.title}</small>\n        </ListItemText>\n      );\n    }\n\n    return (\n      <React.Fragment key={i}>\n        {i !== 0 && <Divider light />}\n        <Link to={url} className={classes.result}>\n          <ListItem button>{content}</ListItem>\n        </Link>\n      </React.Fragment>\n    );\n  };\n\n  const renderContent = () => {\n    if (isLoading) return <Spinner />;\n    if (results.length === 0)\n      return <MessageBanner message=\"No results found.\" />;\n\n    return (\n      <PaginatedList\n        items={results}\n        renderItem={renderResultItem}\n        currentPage={Number(queryParams.get(\"page\"))}\n        rowsPerPage={Number(queryParams.get(\"rowsPerPage\"))}\n        onPageChange={onPageChange}\n        onChangeRowsPerPage={onChangeRowsPerPage}\n        rowsPerPageOptions={[10, 20, 30, 50]}\n      />\n    );\n  };\n\n  return (\n    <Container>\n      <Paper variant=\"outlined\" square className={classes.wrapper}>\n        <Typography variant=\"h5\">\n          Search results for: <b>{query}</b>\n        </Typography>\n        <br />\n        {renderContent()}\n      </Paper>\n    </Container>\n  );\n};\n\nResultsLayout.defaultProps = {\n  results: []\n};\n\nResultsLayout.propTypes = {\n  isLoading: PropTypes.bool,\n  results: PropTypes.array,\n  getSearchResult: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isLoading: searchResultsIsLoadingSelector(state),\n  results: searchResultsSelector(state)\n});\n\nconst mapDispatchToProps = {\n  getSearchResult\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsLayout);\n","import React from 'react';\nimport {\n  Container,\n  Paper,\n  Box,\n  Typography,\n  Divider,\n  makeStyles,\n  ListItem,\n  ListItemText,\n  Avatar\n} from '@material-ui/core';\nimport {\n  userInfoSelector,\n  coursesTakenSelector\n} from '../../core/user/selectors';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PaginatedList from '../../components/common/PaginatedList';\nimport { Link } from 'react-router-dom';\nimport { getCourseCode } from '../../utils/utils';\nimport { getCourseLink } from '../../utils/navigationUtils';\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    color: theme.palette.text.primary,\n    textDecoration: 'none'\n  },\n  avatar: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n    marginBottom: theme.spacing(4)\n  },\n  username: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nconst ProfileLayout = props => {\n  const classNames = useStyles();\n  const { userInfo, coursesTaken } = props;\n\n  const renderTakenCourse = course => (\n    <Link\n      key={getCourseCode(course.subject, course.catalogNumber)}\n      className={classNames.link}\n      to={getCourseLink({\n        subject: course.subject,\n        catalog_number: course.catalogNumber\n      })}\n    >\n      <ListItem button>\n        <ListItemText>\n          {course.subject} {course.catalogNumber} {course.title}\n        </ListItemText>\n      </ListItem>\n    </Link>\n  );\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box paddingTop={6}>\n        <Paper variant=\"outlined\" square>\n          <Box padding={4}>\n            <Avatar\n              alt={userInfo.displayName}\n              src={userInfo.avatarUrl}\n              className={classNames.avatar}\n            />\n            <Typography className={classNames.username} variant=\"h4\">\n              {userInfo.displayName}\n            </Typography>\n            {coursesTaken.length > 0 && (\n              <React.Fragment>\n                <Divider />\n                <Box marginTop={4}>\n                  <Typography variant=\"h6\">Course taken</Typography>\n                  <PaginatedList\n                    items={coursesTaken}\n                    renderItem={renderTakenCourse}\n                  />\n                </Box>\n              </React.Fragment>\n            )}\n          </Box>\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nProfileLayout.propTypes = {\n  userInfo: PropTypes.object,\n  coursesTaken: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  userInfo: userInfoSelector(state),\n  coursesTaken: coursesTakenSelector(state)\n});\n\nexport default connect(mapStateToProps)(ProfileLayout);\n","import CourseLayout from '../layouts/CourseLayout';\nimport CoursesListLayout from '../layouts/CoursesListLayout';\nimport SubjectsLayout from '../layouts/SubjectsLayout';\nimport ResultsLayout from '../layouts/ResultLayout';\nimport NotFoundPage from '../layouts/NotFoundPage';\nimport ProfileLayout from '../layouts/ProfileLayout';\n\nconst routeConfig = [\n  {\n    path: '/subjects/:subject/:catalogNumber',\n    component: CourseLayout\n  },\n  {\n    path: '/subjects/:subject',\n    component: CoursesListLayout\n  },\n  {\n    path: '/subjects',\n    component: SubjectsLayout\n  },\n  {\n    path: '/results',\n    component: ResultsLayout\n  },\n  {\n    path: '/profile',\n    component: ProfileLayout\n  },\n  { path: '/', exact: true, redirectTo: '/subjects' },\n  { path: '**', component: NotFoundPage }\n];\n\nexport default routeConfig;\n","import React from 'react';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport { Container, Box, Typography } from '@material-ui/core';\n\nexport default function () {\n  return (\n    <Container maxWidth=\"lg\">\n      <Box display=\"flex\" justifyContent=\"center\" paddingTop={8}>\n        <div>\n          <Box display=\"flex\" justifyContent=\"center\" marginBottom={4}>\n            <SentimentDissatisfiedIcon style={{ fontSize: 80 }} />\n          </Box>\n          <Typography variant=\"h6\">\n            The page you requested is not found.\n          </Typography>\n        </div>\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactGA from 'react-ga';\nimport { useHistory } from 'react-router-dom';\nimport { GA_TRACKING_ID, ENV } from '../config/config';\n\nReactGA.initialize(GA_TRACKING_ID);\nif (ENV === 'dev') ReactGA.set({ sendHitTask: null });\n\nexport default function ({ children }) {\n  const history = useHistory();\n\n  ReactGA.pageview(history.location.pathname);\n\n  return <React.Fragment>{children}</React.Fragment>;\n}\n","import React, { useEffect } from 'react';\nimport AppBar from './components/appBar/AppBar';\nimport { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { getTerms } from './core/term/actions';\nimport Footer from './components/footer/Footer';\nimport NavigationBreadcrumb from './components/navigation/NavigationBreadcrumb';\nimport { resumeUserSession } from './core/user/actions';\nimport routeConfig from './config/routeConfig';\nimport PropTypes from 'prop-types';\nimport AnalyticsProvider from './providers/AnalyticsProvider';\n\nconst useStyle = makeStyles(theme => ({\n  appContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    backgroundColor: theme.palette.background.default\n  },\n  appContent: {\n    flex: 1,\n    height: '100%',\n    overflowY: 'scroll'\n  }\n}));\n\nfunction App({ getTerms, resumeUserSession }) {\n  const classes = useStyle();\n\n  useEffect(() => {\n    resumeUserSession();\n  }, [resumeUserSession]);\n\n  useEffect(() => {\n    getTerms();\n  }, [getTerms]);\n\n  return (\n    <BrowserRouter basename=\"/uw-course-explorer\">\n      <AnalyticsProvider>\n        <div className={classes.appContainer}>\n          <AppBar />\n          <div className={classes.appContent}>\n            <Switch>\n              {routeConfig.map((config, key) => {\n                const {\n                  path,\n                  exact,\n                  redirectTo,\n                  breadcrumb,\n                  component: Component,\n                  props\n                } = config;\n\n                return (\n                  <Route key={key} exact={exact} path={path}>\n                    {redirectTo ? (\n                      <Redirect to={redirectTo} />\n                    ) : (\n                      <React.Fragment>\n                        {breadcrumb && <NavigationBreadcrumb />}\n                        <Component {...props} />\n                      </React.Fragment>\n                    )}\n                  </Route>\n                );\n              })}\n            </Switch>\n            <Footer />\n          </div>\n        </div>\n      </AnalyticsProvider>\n    </BrowserRouter>\n  );\n}\n\nApp.propTypes = {\n  getTerms: PropTypes.func.isRequired,\n  resumeUserSession: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = {\n  getTerms,\n  resumeUserSession\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { subjectsActionTypes } from \"./actions\";\n\nconst initialState = { loading: false, subjects: [] };\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case subjectsActionTypes.GET_SUBJECTS:\n      return { ...state, loading: true };\n\n    case subjectsActionTypes.GET_SUBJECTS_SUCCESS:\n      return { ...state, loading: false, subjects: action.subjects };\n\n    case subjectsActionTypes.GET_SUBJECTS_FAILURE:\n      return { ...state, loading: false, subjects: [] };\n\n    default:\n      break;\n  }\n\n  return state;\n}\n","import { coursesActionTypes } from './actions';\nimport Immutable from 'immutable';\nimport { userActionTypes } from '../../core/user/actions';\nimport { combineReducers } from 'redux';\n\nconst coursesInitialState = {\n  loading: false,\n  courses: [],\n  shortlist: {\n    loading: false,\n    courses: []\n  }\n};\n\nconst courses = (state = coursesInitialState, action) => {\n  switch (action.type) {\n    case coursesActionTypes.GET_COURSES:\n      return { ...state, loading: true };\n\n    case coursesActionTypes.GET_COURSES_SUCCESS:\n      return { ...state, loading: false, courses: action.courses };\n\n    case coursesActionTypes.GET_COURSES_FAILURE:\n      return { ...state, loading: false, courses: [] };\n\n    case coursesActionTypes.GET_SHORTLISTED_COURSES:\n      return Immutable.merge(state, { shortlist: { loading: true } });\n\n    case coursesActionTypes.GET_SHORTLISTED_COURSES_SUCCESS:\n      return Immutable.merge(state, {\n        shortlist: { loading: false, courses: action.courses }\n      });\n\n    case userActionTypes.LOG_OUT_SUCCESS:\n    case coursesActionTypes.GET_SHORTLISTED_COURSES_FAILURE:\n      return Immutable.merge(state, {\n        shortlist: { loading: false, courses: [] }\n      });\n\n    default:\n      break;\n  }\n\n  return state;\n};\n\nconst unlockedCourses = (state = [], action) => {\n  switch (action.type) {\n    case coursesActionTypes.GET_UNLOCKED_COURSES_SUCCESS:\n      return action.courses || [];\n\n    case coursesActionTypes.GET_UNLOCKED_COURSES:\n    case coursesActionTypes.GET_UNLOCKED_COURSES_FAILURE:\n    case userActionTypes.LOG_OUT_SUCCESS:\n      return [];\n\n    default:\n      break;\n  }\n\n  return [...state];\n};\n\nconst unlockedCoursesMap = (state = {}, action) => {\n  switch (action.type) {\n    case coursesActionTypes.GET_UNLOCKED_COURSES_SUCCESS: {\n      const unlockedCourses = action.courses || [];\n      const newState = unlockedCourses.reduce((map, course) => {\n        map[course.name] = course;\n\n        return map;\n      }, {});\n\n      return newState;\n    }\n\n    case coursesActionTypes.GET_UNLOCKED_COURSES:\n    case coursesActionTypes.GET_UNLOCKED_COURSES_FAILURE:\n    case userActionTypes.LOG_OUT_SUCCESS:\n      return {};\n\n    default:\n      break;\n  }\n\n  return { ...state };\n};\n\nexport default combineReducers({\n  courses,\n  unlockedCourses,\n  unlockedCoursesMap\n});\n","import { courseActionTypes } from \"./actions\";\n\nconst initialState = {\n  loading: false,\n  course: null,\n  schedule: {\n    loading: false,\n    sections: []\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case courseActionTypes.GET_COURSE_BY_CATALOG_NUMBER:\n      return { ...state, loading: true };\n\n    case courseActionTypes.GET_COURSE_SUCCESS:\n      return { ...state, loading: false, course: action.course };\n\n    case courseActionTypes.GET_COURSE_FAILURE:\n      return { ...state, loading: false, course: null };\n\n    case courseActionTypes.GET_COURSE_SCHEDULE:\n      return { ...state, schedule: { ...state.schedule, loading: true } };\n\n    case courseActionTypes.GET_COURSE_SCHEDULE_SUCCESS:\n      return {\n        ...state,\n        schedule: {\n          ...state.schedule,\n          loading: false,\n          sections: action.sections\n        }\n      };\n\n    case courseActionTypes.GET_COURSE_SCHEDULE_FAILURE:\n      return { ...state, schedule: { ...state.schedule, loading: false } };\n\n    case courseActionTypes.SHORTLIST_COURSE_SUCCESS:\n    case courseActionTypes.UNSHORTLIST_COURSE_SUCCESS: {\n      if (action.course.course_id === state.course.course_id) {\n        const course = Object.assign({}, state.course);\n        course.shortlisted =\n          action.type === courseActionTypes.SHORTLIST_COURSE_SUCCESS;\n        return { ...state, course };\n      }\n      return state;\n    }\n\n    default:\n      break;\n  }\n\n  return state;\n}\n","import { combineReducers } from \"redux\";\nimport { resultActionTypes } from \"./actions\";\n\nconst results = (state = { isLoading: false, data: [] }, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case resultActionTypes.GET_SEARCH_RESULT:\n      return { ...state, isLoading: true };\n\n    case resultActionTypes.GET_SEARCH_RESULT_SUCCESS:\n      return { ...state, isLoading: false, data: payload.results };\n\n    case resultActionTypes.CLEAR_SEARCH_RESULT:\n    case resultActionTypes.GET_SEARCH_RESULT_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        data: []\n      };\n\n    default:\n      break;\n  }\n\n  return { ...state };\n};\n\nexport default combineReducers({ results });\n","import { coreActionTypes } from \"./actions\";\n\nconst initialState = {\n  loading: false,\n  previousTerm: null,\n  currentTerm: null,\n  nextTerm: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case coreActionTypes.GET_TERMS:\n      return { ...state, loading: true };\n\n    case coreActionTypes.GET_TERMS_SUCCESS: {\n      const { previousTerm, currentTerm, nextTerm } = action.result;\n      return {\n        ...state,\n        loading: false,\n        previousTerm,\n        currentTerm,\n        nextTerm\n      };\n    }\n\n    case coreActionTypes.GET_TERMS_FAILURE:\n      return { ...state, loading: false };\n\n    default:\n      break;\n  }\n\n  return state;\n}\n","import { userActionTypes } from './actions';\nimport { combineReducers } from 'redux';\nimport { courseActionTypes } from '../../components/course/actions';\nimport { getCourseCode } from '../../utils/utils';\n\nconst userInfoInitialState = {\n  loading: false,\n  loggedIn: false,\n  displayName: null,\n  avatarUrl: '',\n  id: null,\n  shortlistedCourses: []\n};\n\nconst userInfo = (state = userInfoInitialState, action) => {\n  const { type, userInfo } = action;\n\n  switch (type) {\n    case userActionTypes.GET_USER_INFO:\n      return { ...state, loading: true };\n\n    case userActionTypes.GET_USER_INFO_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        loggedIn: true,\n        displayName: userInfo.displayName,\n        id: userInfo.id,\n        avatarUrl: userInfo.avatarUrl,\n        shortlistedCourses: userInfo.shortlistedCourses || []\n      };\n\n    case userActionTypes.GET_USER_INFO_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        loggedIn: false\n      };\n\n    case userActionTypes.LOG_OUT:\n      return { ...state, loading: true };\n\n    case userActionTypes.LOG_OUT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        loggedIn: false\n      };\n\n    case userActionTypes.LOG_OUT_FAILURE:\n      return { ...state, loading: false };\n\n    default:\n      break;\n  }\n\n  return { ...state };\n};\n\nconst coursesTakenInitialState = {\n  loading: false,\n  coursesTaken: [],\n  coursesTakenMap: {}\n};\n\nconst buildCoursesTakenMap = coursesTaken =>\n  coursesTaken.reduce((map, course) => {\n    map[getCourseCode(course.subject, course.catalogNumber)] = course;\n\n    return map;\n  }, {});\n\nconst coursesTaken = (state = coursesTakenInitialState, action) => {\n  switch (action.type) {\n    case courseActionTypes.MARK_COURSE_TAKEN_SUCCESS:\n    case courseActionTypes.UN_MARK_COURSE_TAKEN_SUCCESS: {\n      const coursesTakenMap = buildCoursesTakenMap(action.coursesTaken);\n\n      return {\n        ...state,\n        coursesTaken: action.coursesTaken,\n        coursesTakenMap,\n        loading: false\n      };\n    }\n\n    case userActionTypes.GET_USER_INFO_SUCCESS: {\n      const coursesTakenMap = buildCoursesTakenMap(\n        action.userInfo.coursesTaken\n      );\n\n      return {\n        ...state,\n        loading: false,\n        coursesTaken: action.userInfo.coursesTaken,\n        coursesTakenMap\n      };\n    }\n\n    case userActionTypes.LOG_OUT_SUCCESS:\n      return { ...coursesTakenInitialState };\n\n    default:\n      break;\n  }\n\n  return { ...state };\n};\n\nexport default combineReducers({ userInfo, coursesTaken });\n","export const errorActionTypes = {\n  NETWORK_ERROR: \"error/NETWORK_ERROR\",\n  SERVICE_UNAVAILABLE_ERROR: \"error/SERVICE_UNAVAILABLE_ERROR\"\n};\n\nexport const networkError = error => ({\n  type: errorActionTypes.NETWORK_ERROR,\n  error\n});\n\nexport const serviceUnavailableError = error => ({\n  type: errorActionTypes.SERVICE_UNAVAILABLE_ERROR,\n  error\n});\n","import { courseActionTypes } from '../components/course/actions';\nimport { errorActionTypes } from '../core/error/actions';\nimport { userActionTypes } from '../core/user/actions';\n\nconst notificationConfig = {\n  [courseActionTypes.SHORTLIST_COURSE_SUCCESS]: {\n    message: 'Pinned course!',\n    variant: 'success'\n  },\n  [courseActionTypes.UNSHORTLIST_COURSE_SUCCESS]: {\n    message: 'Unpinned course!',\n    variant: 'success'\n  },\n  [errorActionTypes.NETWORK_ERROR]: {\n    message: 'Network error',\n    variant: 'error'\n  },\n  [userActionTypes.LOG_OUT_SUCCESS]: {\n    message: 'Logged out successfully!',\n    variant: 'success'\n  },\n  [courseActionTypes.MARK_COURSE_TAKEN_SUCCESS]: {\n    message: 'Marked as taken!',\n    variant: 'success'\n  },\n  [courseActionTypes.UN_MARK_COURSE_TAKEN_SUCCESS]: {\n    message: 'Marked as not taken!',\n    variant: 'success'\n  }\n};\n\nexport default notificationConfig;\n","import { combineReducers } from \"redux\";\nimport subjects from \"../components/subjects/reducers\";\nimport courses from \"./courses/reducers\";\nimport course from \"../components/course/reducers\";\nimport search from \"./search/reducers\";\n\n// core\nimport term from \"../core/term/reducers\";\nimport user from \"../core/user/reducers\";\nimport notifications from \"../core/notifications/reducers\";\n\nconst rootReducer = combineReducers({\n  subjects,\n  courses,\n  course,\n  term,\n  user,\n  notifications,\n  search\n});\n\nexport default rootReducer;\n","import notificationConfig from \"../../config/notificationConfig\";\n\nexport default function(state = [], action) {\n  const { type } = action;\n\n  if (!notificationConfig[type]) return [...state];\n\n  const config = Object.assign({}, notificationConfig[type], {\n    id: Date.now()\n  });\n\n  return [...state, config];\n}\n","import Axios from \"axios\";\nimport { SERVER_URL } from \"../../config/config\";\n\nconst parseResponse = res => res.data;\n\nexport const getSubjects = () =>\n  Axios.get(`${SERVER_URL}/subject`).then(parseResponse);\n\nexport const getCoursesBySubject = subject =>\n  Axios.get(`${SERVER_URL}/subject/${subject}/course`).then(parseResponse);\n","import { takeLatest, call, put } from \"redux-saga/effects\";\nimport {\n  subjectsActionTypes,\n  getSubjectsSuccess,\n  getSubjectsFailure\n} from \"./actions\";\nimport * as subjectService from \"../../services/subject/subjectService\";\n\nfunction* getSubjects() {\n  try {\n    const subjects = yield call(subjectService.getSubjects);\n    yield put(getSubjectsSuccess(subjects));\n  } catch (error) {\n    yield put(getSubjectsFailure(error));\n  }\n}\n\nexport default function*() {\n  yield takeLatest(subjectsActionTypes.GET_SUBJECTS, getSubjects);\n}\n","import Axios from 'axios';\n\nconst parseResponse = res => res.data;\n\nexport const httpGet = (url, options) =>\n  Axios.get(url, options).then(parseResponse);\n\nexport const httpPost = (url, data, options) =>\n  Axios.post(url, data, options).then(parseResponse);\n\nexport const httpPut = (url, data, options) =>\n  Axios.put(url, data, options).then(parseResponse);\n\nexport const httpDelete = (url, options) =>\n  Axios.delete(url, options).then(parseResponse);\n\nexport const httpAuthGet = (url, options) =>\n  httpGet(url, Object.assign({}, options, { withCredentials: true }));\n\nexport const httpAuthPost = (url, data, options) =>\n  httpPost(url, data, Object.assign({}, options, { withCredentials: true }));\n\nexport const httpAuthPut = (url, data, options) =>\n  httpPut(url, data, Object.assign({}, options, { withCredentials: true }));\n\nexport const httpAuthDelete = (url, options) =>\n  httpDelete(url, Object.assign({}, options, { withCredentials: true }));\n","import {\n  httpGet,\n  httpAuthPut,\n  httpAuthGet,\n  httpAuthPost,\n  httpAuthDelete\n} from '../../core/services/http/httpService';\nimport { SERVER_URL } from '../../config/config';\n\nexport const getCourses = () => httpGet(`${SERVER_URL}/course`);\n\nexport const getCourseById = id => httpAuthGet(`${SERVER_URL}/course/${id}`);\n\nexport const getCourseByCatalogNumber = (subject, catalogNumber) =>\n  httpAuthGet(`${SERVER_URL}/course/${subject}/${catalogNumber}`);\n\nexport const getCourseSchedule = (term, subject, catalogNumber) =>\n  httpGet(`${SERVER_URL}/term/${term}/${subject}/${catalogNumber}/schedule`);\n\nexport const shortlistCourse = courseId =>\n  httpAuthPut(`${SERVER_URL}/course/${courseId}/shortlist`);\n\nexport const unshortlistCourse = courseId =>\n  httpAuthPut(`${SERVER_URL}/course/${courseId}/unshortlist`);\n\nexport const getShortlistedCourses = () =>\n  httpAuthGet(`${SERVER_URL}/course/shortlist`);\n\nexport const markCourseTaken = (subject, catalogNumber) =>\n  httpAuthPost(`${SERVER_URL}/user/coursesTaken`, { subject, catalogNumber });\n\nexport const unMarkCourseTaken = (subject, catalogNumber) => {\n  const params = new URLSearchParams({ subject, catalogNumber });\n\n  return httpAuthDelete(`${SERVER_URL}/user/coursesTaken?${params.toString()}`);\n};\n\nexport const getUnlockedCourses = () =>\n  httpAuthGet(`${SERVER_URL}/course/unlockedCourses`);\n","import { takeLatest, call, put } from 'redux-saga/effects';\nimport {\n  coursesActionTypes,\n  getCoursesFailure,\n  getCoursesSuccess,\n  getShortlistedCoursesFailure,\n  getShortlistedCoursesSuccess,\n  getUnlockedCoursesFailure,\n  getUnlockedCoursesSuccess,\n  getUnlockedCourses\n} from './actions';\nimport * as subjectService from '../../services/subject/subjectService';\nimport * as courseService from '../../services/course/courseService';\nimport { userActionTypes } from '../../core/user/actions';\nimport { courseActionTypes } from '../../components/course/actions';\n\nfunction* getCourses({ subject }) {\n  try {\n    let courses = null;\n    if (subject !== null) {\n      courses = yield call(subjectService.getCoursesBySubject, subject);\n    } else {\n      courses = yield call(courseService.getCourses);\n    }\n    yield put(getCoursesSuccess(courses));\n  } catch (error) {\n    yield put(getCoursesFailure(error));\n  }\n}\n\nfunction* handleGetShortlistedCourses() {\n  try {\n    const courses = yield call(courseService.getShortlistedCourses);\n    yield put(getShortlistedCoursesSuccess(courses));\n  } catch (error) {\n    yield put(getShortlistedCoursesFailure(error));\n  }\n}\n\nfunction* handleGetUnlockCourses() {\n  try {\n    const { courses = [] } = yield call(courseService.getUnlockedCourses);\n\n    yield put(getUnlockedCoursesSuccess({ courses }));\n  } catch (error) {\n    console.error(error);\n    yield put(getUnlockedCoursesFailure());\n  }\n}\n\nfunction* handleUpdateUnlockedCourses() {\n  yield put(getUnlockedCourses());\n}\n\nexport default function* () {\n  yield takeLatest(coursesActionTypes.GET_COURSES, getCourses);\n  yield takeLatest(\n    coursesActionTypes.GET_SHORTLISTED_COURSES,\n    handleGetShortlistedCourses\n  );\n  yield takeLatest(\n    coursesActionTypes.GET_UNLOCKED_COURSES,\n    handleGetUnlockCourses\n  );\n\n  yield takeLatest(\n    courseActionTypes.MARK_COURSE_TAKEN_SUCCESS,\n    handleUpdateUnlockedCourses\n  );\n  yield takeLatest(\n    courseActionTypes.UN_MARK_COURSE_TAKEN_SUCCESS,\n    handleUpdateUnlockedCourses\n  );\n\n  // when user logs in\n  yield takeLatest(\n    userActionTypes.GET_USER_INFO_SUCCESS,\n    handleUpdateUnlockedCourses\n  );\n}\n","import { takeLatest, put, call } from 'redux-saga/effects';\nimport {\n  courseActionTypes,\n  getCourseFailure,\n  getCourseSuccess,\n  getCourseScheduleFailure,\n  getCourseScheduleSuccess,\n  shortlistCourseFailure,\n  shortlistCourseSuccess,\n  unshortlistCourseSuccess,\n  unshortlistCourseFailure,\n  markCourseTakenSuccess,\n  markCourseTakenFailure,\n  unMarkCourseTakenSuccess,\n  unMarkCourseTakenFailure\n} from './actions';\nimport * as courseService from '../../services/course/courseService';\n\nfunction* handleGetCourseByCatalogNumber({\n  payload: { subject, catalogNumber }\n}) {\n  try {\n    const course = yield call(\n      courseService.getCourseByCatalogNumber,\n      subject,\n      catalogNumber\n    );\n\n    yield put(getCourseSuccess(course));\n  } catch (error) {\n    yield put(getCourseFailure(error));\n  }\n}\n\nfunction* getCourseSchedule({ term, subject, catalogNumber }) {\n  try {\n    const schedule = yield call(\n      courseService.getCourseSchedule,\n      term,\n      subject,\n      catalogNumber\n    );\n    yield put(getCourseScheduleSuccess(schedule));\n  } catch (error) {\n    yield put(getCourseScheduleFailure(error));\n  }\n}\n\nfunction* handleShortlistCourse({ course }) {\n  try {\n    const { course_id } = course;\n    yield call(courseService.shortlistCourse, course_id);\n    yield put(shortlistCourseSuccess(course));\n  } catch (error) {\n    yield put(shortlistCourseFailure(error));\n  }\n}\n\nfunction* handleUnshortlistCourse({ course }) {\n  try {\n    const { course_id } = course;\n    yield call(courseService.unshortlistCourse, course_id);\n    yield put(unshortlistCourseSuccess(course));\n  } catch (error) {\n    yield put(unshortlistCourseFailure(error));\n  }\n}\n\nfunction* handleMarkTaken({ payload: { subject, catalogNumber } }) {\n  try {\n    const { coursesTaken } = yield call(\n      courseService.markCourseTaken,\n      subject,\n      catalogNumber\n    );\n\n    yield put(markCourseTakenSuccess({ coursesTaken }));\n  } catch (error) {\n    console.error(error);\n    yield put(markCourseTakenFailure(error));\n  }\n}\n\nfunction* handleUnMarkTaken({ payload: { subject, catalogNumber } }) {\n  try {\n    const { coursesTaken } = yield call(\n      courseService.unMarkCourseTaken,\n      subject,\n      catalogNumber\n    );\n\n    yield put(unMarkCourseTakenSuccess({ coursesTaken }));\n  } catch (error) {\n    console.error(error);\n    yield put(unMarkCourseTakenFailure(error));\n  }\n}\n\nexport default function* () {\n  yield takeLatest(\n    courseActionTypes.GET_COURSE_BY_CATALOG_NUMBER,\n    handleGetCourseByCatalogNumber\n  );\n  yield takeLatest(courseActionTypes.GET_COURSE_SCHEDULE, getCourseSchedule);\n  yield takeLatest(courseActionTypes.SHORTLIST_COURSE, handleShortlistCourse);\n  yield takeLatest(\n    courseActionTypes.UNSHORTLIST_COURSE,\n    handleUnshortlistCourse\n  );\n  yield takeLatest(courseActionTypes.MARK_COURSE_TAKEN, handleMarkTaken);\n  yield takeLatest(courseActionTypes.UN_MARK_COURSE_TAKEN, handleUnMarkTaken);\n}\n","import { SERVER_URL } from \"../../config/config\";\nimport { httpGet } from \"../../core/services/http/httpService\";\n\nexport const querySearch = ({ query, count }) => {\n  const params = new URLSearchParams({ query });\n  if (count) params.set(\"count\", count);\n\n  return httpGet(`${SERVER_URL}/search?${params.toString()}`);\n};\n","import { takeLatest, put, call } from \"redux-saga/effects\";\nimport {\n  resultActionTypes,\n  getSearchResultFailure,\n  getSearchResultSuccess\n} from \"./actions\";\nimport { querySearch } from \"../../services/search/searchService\";\n\nfunction* handleSearch({ payload }) {\n  try {\n    const results = yield call(querySearch, payload);\n    yield put(getSearchResultSuccess({ results }));\n  } catch (err) {\n    yield put(getSearchResultFailure(err));\n  }\n}\n\nexport default function*() {\n  yield takeLatest(resultActionTypes.GET_SEARCH_RESULT, handleSearch);\n}\n","import Axios from \"axios\";\nimport { SERVER_URL } from \"../../../config/config\";\n\nconst parseResponse = res => res.data;\n\nexport const getAllTerms = () =>\n  Axios.get(`${SERVER_URL}/term`).then(parseResponse);\n","import { put, call, takeLatest } from \"redux-saga/effects\";\nimport { getTermsFailure, getTermsSuccess, coreActionTypes } from \"./actions\";\nimport * as termService from \"../../core/services/term/termService\";\n\nfunction* getTerms() {\n  try {\n    const res = yield call(termService.getAllTerms);\n    const { previous_term, current_term, next_term, listings } = res;\n    const result = {\n      previousTerm: { id: previous_term },\n      currentTerm: { id: current_term },\n      nextTerm: { id: next_term }\n    };\n\n    Object.keys(listings).forEach(key =>\n      listings[key].forEach(term => {\n        if (term.id === previous_term) {\n          result.previousTerm = term;\n        } else if (term.id === current_term) {\n          result.currentTerm = term;\n        } else if (term.id === next_term) {\n          result.nextTerm = term;\n        }\n      })\n    );\n\n    yield put(getTermsSuccess(result));\n  } catch (error) {\n    yield put(getTermsFailure(error));\n  }\n}\n\nexport default function*() {\n  yield takeLatest(coreActionTypes.GET_TERMS, getTerms);\n}\n","import { httpAuthGet, httpAuthPost } from '../http/httpService';\nimport { SERVER_URL } from '../../../config/config';\n\nexport const checkLoginStatus = () => httpAuthGet(`${SERVER_URL}/user/status`);\n\nexport const getUserInfo = () => httpAuthGet(`${SERVER_URL}/user`);\n\nexport const doOAuth = (provider, access_token) =>\n  httpAuthPost(`${SERVER_URL}/user/oauth`, {\n    provider,\n    access_token\n  });\n\nexport const logOut = () => httpAuthPost(`${SERVER_URL}/user/logout`);\n\nexport const getCoursesTaken = () =>\n  httpAuthGet(`${SERVER_URL}/user/coursesTaken`);\n","import { takeLatest, put, call } from \"redux-saga/effects\";\nimport {\n  userActionTypes,\n  oauthSignInFailure,\n  oauthSignInSuccess,\n  getUserInfo,\n  getUserInfoFailure,\n  getUserInfoSuccess,\n  logOutFailure,\n  logOutSuccess\n} from \"./actions\";\nimport * as userService from \"../services/user/userService\";\n\nfunction* oauthSignIn({ provider, params }) {\n  try {\n    const { accessToken } = params;\n    const result = yield call(userService.doOAuth, provider, accessToken);\n    localStorage.setItem(\"oauth-provider\", provider);\n    localStorage.setItem(\"oauth-token\", accessToken);\n    yield put(oauthSignInSuccess(result));\n    yield put(getUserInfo());\n  } catch (error) {\n    localStorage.removeItem(\"oauth-provider\");\n    localStorage.removeItem(\"oauth-token\");\n    yield put(oauthSignInFailure(error));\n  }\n}\n\nfunction* handleGetUserInfo() {\n  try {\n    const userInfo = yield call(userService.getUserInfo);\n    yield put(getUserInfoSuccess(userInfo));\n  } catch (error) {\n    yield put(getUserInfoFailure(error));\n  }\n}\n\nfunction* handleResumeUserSession() {\n  try {\n    const { loggedIn } = yield call(userService.checkLoginStatus);\n    if (loggedIn) yield put(getUserInfo());\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction* handleUserLogOut() {\n  try {\n    yield call(userService.logOut);\n    yield put(logOutSuccess());\n  } catch (error) {\n    yield put(logOutFailure(error));\n  }\n}\n\nexport default function*() {\n  yield takeLatest(userActionTypes.OAUTH_SIGN_IN, oauthSignIn);\n  yield takeLatest(userActionTypes.GET_USER_INFO, handleGetUserInfo);\n  yield takeLatest(\n    userActionTypes.RESUME_USER_SESSION,\n    handleResumeUserSession\n  );\n  yield takeLatest(userActionTypes.LOG_OUT, handleUserLogOut);\n}\n","import { all, fork } from \"redux-saga/effects\";\nimport subjects from \"../components/subjects/sagas\";\nimport courses from \"./courses/sagas\";\nimport course from \"../components/course/sagas\";\nimport search from \"./search/sagas\";\n\n// core\nimport term from \"../core/term/sagas\";\nimport user from \"../core/user/sagas\";\n\nexport default function*() {\n  yield all([\n    fork(subjects),\n    fork(courses),\n    fork(course),\n    fork(term),\n    fork(user),\n    fork(search)\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../store/rootReducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../store/rootSaga\";\nimport { ENV } from \"./config\";\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middleware = [sagaMiddleware];\n  const composeEnhancers =\n    ENV === \"dev\"\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n      : compose;\n\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(...middleware))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n\nexport default configureStore;\n","import React from \"react\";\nimport ConfigProvider from \"./ConfigProvider\";\nimport FeatureFlagProvider from \"./FeatureFlagProvider\";\n\nexport default function({ children }) {\n  return (\n    <ConfigProvider>\n      <FeatureFlagProvider>{children}</FeatureFlagProvider>\n    </ConfigProvider>\n  );\n}\n","export const notificationsSelector = state => state.notifications.slice();\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { notificationsSelector } from \"../core/notifications/selectors\";\nimport { SnackbarProvider, useSnackbar } from \"notistack\";\nimport PropTypes from \"prop-types\";\n\nconst displayed = new Map();\n\nconst NotificationsProvider = props => {\n  const { children, notifications } = props;\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (notifications.length) {\n      const { id, message, ...rest } = notifications.pop();\n\n      if (!displayed.has(id)) {\n        enqueueSnackbar(message, {\n          autoHideDuration: 4000,\n          preventDuplicate: true,\n          ...rest\n        });\n        displayed.set(id, true);\n      }\n    }\n  }, [enqueueSnackbar, notifications]);\n\n  return <React.Fragment>{children}</React.Fragment>;\n};\n\nNotificationsProvider.propTypes = {\n  children: PropTypes.node,\n  notifications: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  notifications: notificationsSelector(state)\n});\n\nconst NotificationsProviderConnected = connect(mapStateToProps)(\n  NotificationsProvider\n);\n\nexport default function({ children }) {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <NotificationsProviderConnected>\n        {children}\n      </NotificationsProviderConnected>\n    </SnackbarProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Axios from \"axios\";\nimport { serviceUnavailableError, networkError } from \"../core/error/actions\";\n\nexport default function(store) {\n  Axios.interceptors.response.use(\n    res => res,\n    error => {\n      const { response } = error;\n\n      if (!response) {\n        store.dispatch(networkError(error));\n      } else {\n        const { status } = response;\n        switch (status) {\n          case 500:\n          case 503:\n            store.dispatch(serviceUnavailableError(error));\n            break;\n          default:\n            break;\n        }\n      }\n\n      return Promise.reject(error);\n    }\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./config/configureStore\";\nimport configAxios from \"./config/configAxios\";\nimport InitializationProvider from \"./providers/InitializationProvider\";\nimport NotificationsProvider from \"./providers/NotificationsProvider\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nconst store = configureStore();\nconfigAxios(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <CssBaseline />\n    <InitializationProvider>\n      <NotificationsProvider>\n        <App />\n      </NotificationsProvider>\n    </InitializationProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}